{"version":3,"sources":["components/SearchBar.js","config/index.js","Home.js","components/NavBar.js","components/SignUp.js","components/Profile.js","components/MapView.js","components/ParkingForm.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","padding","display","alignItems","width","input","marginLeft","flex","iconButton","divider","height","margin","SearchBar","props","_useState","useState","_useState2","Object","slicedToArray","address","setAddress","classes","react_default","a","createElement","Paper","className","IconButton","aria-label","Menu_default","InputBase","placeholder","inputProps","onChange","e","target","value","Search_default","Divider","onClick","findParking","color","Directions_default","config","api","Geocode","setApiKey","Home","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","socket","addAddress","setState","addresses","concat","toConsumableArray","state","promptUser","Popup","create","title","content","buttons","left","text","action","alert","close","right","key","history","push","confirmParkingSpot","fromAddress","then","response","locationObject","_response$results$0$g","results","geometry","location","lat","lng","getParkingSpot","error","console","log","fromRentee","emit","io","connect","on","data","undefined","fromRentor","getSocket","React","Component","withRouter","NavBar","user","react_router_dom","to","logOut","SignUp","username","password","bio","avatar","handleChange","defineProperty","name","handleSubmit","preventDefault","createNewUser","_this2","onSubmit","autoComplete","type","Profile","alt","src","react_router","MapView","parkingSpots","map","spot","google_maps_react_dist","position","style","google","initialCenter","center","zoom","defaultProps","GoogleApiWrapper","apiKey","theme","card","maxWidth","media","textField","spacing","marginRight","ParkingForm","_React$useState","_React$useState2","values","setValues","Card","CardActionArea","CardMedia","image","CardContent","TextField","id","label","event","objectSpread","variant","CardActions","Button","addressObject","size","navigator","geolocation","getCurrentPosition","App","localStorage","getItem","removeItem","fetch","method","headers","Content-Type","Accept","body","JSON","stringify","res","json","setItem","jwt","getProfile","catch","err","logIn","token","Authorization","currentLocation","isRentor","coords","latitude","longitude","_this3","react_https_redirect_lib_default","components_NavBar","dist_default","exact","path","render","src_Home_0","components_MapView","components_SignUp","components_Profile","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e22ee79d.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\n\nconst useStyles = makeStyles({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 400,\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4,\n  },\n});\n\nexport default function SearchBar(props) {\n  const [address, setAddress] = useState(\" \");\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.root}>\n      <IconButton className={classes.iconButton} aria-label=\"menu\">\n        <MenuIcon />\n      </IconButton>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Search Google Maps\"\n        inputProps={{ 'aria-label': 'search google maps' }}\n        onChange={e=> setAddress(e.target.value)}\n      />\n      <IconButton className={classes.iconButton} aria-label=\"search\">\n        <SearchIcon />\n      </IconButton>\n      <Divider className={classes.divider} />\n      <IconButton onClick={()=>props.findParking(address)}color=\"primary\" className={classes.iconButton} aria-label=\"directions\">\n        <DirectionsIcon />\n      </IconButton>\n    </Paper>\n  );\n}\n","// Here we define where our server is listening. It is best to store this in\n// a configuration file because we are able to easily change the server URL\n// based on the current environment. I.e if we are in development, we want to\n// use a local API, but if the app is running publicly on the internet we want to\n// use a publicly accessible version of this API. Storing the address in the config\n// file allows us to easily create different settings for various environments.\nexport default {\n  api: 'https://open-spaces-websockets.herokuapp.com/'\n}\n","import React from 'react';\nimport './Home.css';\nimport SearchBar from \"./components/SearchBar\";\nimport Geocode from \"react-geocode\";\nimport io from 'socket.io-client';\nimport config from './config';\nimport Popup from 'react-popup';\nimport { withRouter } from 'react-router-dom'\n\nGeocode.setApiKey(\"AIzaSyDS7fqSLY5L2xuXAb8cIb1vyQRKt5EPXmw\");\n\nclass Home extends React.Component{\n  socket = {};\n\n  constructor(){\n    super()\n    this.state = {\n      addresses:[],\n    }\n    this.socket = io(config.api).connect()\n    this.socket.on('server:message', (data)=>{\n      console.log(\"server:message\",data)\n      if (data.fromRentee) {\n        this.promptUser()\n      }else if(data.address !== undefined && data.fromRentor){\n        this.confirmParkingSpot(data.address)\n      }\n    })\n    // this.socket.on('server:message', (data)=>{\n    //   console.log(\"parking:message\",data)\n    // })\n  }\n\n  componentDidMount(){\n    this.props.getSocket(this.socket)\n  }\n\n\n\n\n  addAddress =(address)=>{\n      this.setState({ addresses:[...this.state.addresses,address] })\n    }\n\n    promptUser = ()=>{\n      let goToParkingForm = ()=>this.props.history.push('/parkingform')\n      Popup.create({\n      title: null,\n      content: 'A User is requesting a Parking Spot! Do you accept?',\n      buttons: {\n          left: [{\n              text: 'Cancel',\n              className: 'danger',\n              action: function () {\n                  Popup.alert('You pressed the Cancel btn');\n\n                  /** Close this popup. Close will always close the current visible one, if one is visible */\n                  Popup.close();\n              }\n          }],\n          right: [{\n              text: 'Post Parking Spot',\n              key: 'ctrl+enter',\n              action: function () {\n                  // Passing true as the second argument to the create method\n                  // displays it directly, without interupting the queue.\n                  goToParkingForm()\n                  Popup.create({\n                      title: null,\n                      content: 'We are waiting for the Rentee to confirm!',\n                      buttons: {\n                          left: ['cancel'],\n                          right: []\n                      }\n                  }, true);\n              }\n          }, {\n              text: 'Save',\n              className: 'success',\n              action: function () {\n                  Popup.alert('You pressed the Save btn');\n\n                  /** Close this popup. Close will always close the current visible one, if one is visible */\n                  Popup.close();\n              }\n          }]\n      }\n  });\n    }\n\n    confirmParkingSpot = (address)=>{\n      let goToMap = ()=>this.props.history.push('/map')\n      let getParkingSpot = (locationObject)=>this.props.getParkingSpot(locationObject)\n      Popup.create({\n      title: null,\n      content: `A Rentor has accepted your request with a parking spot at this location: ${address}, is this ok?`,\n      buttons: {\n          left: [{\n              text: 'Cancel',\n              className: 'danger',\n              action: function () {\n                  Popup.alert('You pressed the Cancel btn');\n\n                  /** Close this popup. Close will always close the current visible one, if one is visible */\n                  Popup.close();\n              }\n          }],\n          right: [{\n              text: 'Yes!',\n              key: 'ctrl+enter',\n              action: function () {\n                  // Passing true as the second argument to the create method\n                  // displays it directly, without interupting the queue.\n                  goToMap()\n                  Geocode.fromAddress(address).then(\n                    response => {\n                      const {\n                        lat,\n                        lng\n                      } = response.results[0].geometry.location;\n                      getParkingSpot({lat, lng})\n                    },\n                    error => {\n                      console.error(error);\n                    }\n                  );\n\n                  Popup.create({\n                      title: null,\n                      content: 'Here is your parking spot!',\n                      buttons: {\n                          left: ['cancel'],\n                          right: []\n                      }\n                  }, true);\n              }\n          }, {\n              text: 'Done',\n              className: 'success',\n              action: function () {\n                  Popup.alert('Done');\n\n                  /** Close this popup. Close will always close the current visible one, if one is visible */\n                  Popup.close();\n              }\n          }]\n      }\n  })\n    }\n\n  findParking = (input)=>{\n    console.log(\"findparkin\",this.socket)\n    Geocode.fromAddress(input).then(\n  response => {\n    const locationObject = response.results[0].geometry.location;\n    console.log(\"locationObject\",locationObject);\n    this.addAddress(locationObject)\n    locationObject.fromRentee = true;\n    this.socket.emit('client:message', locationObject)\n\n  },\n  error => {\n    console.error(error);\n  }\n);\n  }\nrender(){\n  console.log(this.state.addresses);\n  return (\n      <div className=\"home-container\">\n      <header className='header'>\n            <div className=\"header__logo-box\">\n            </div>\n            <div className=\"header__text-box\">\n              <h1 className=\"heading-primary\">\n                <span className=\"heading-primary--main\">Open Spaces</span>\n                <span className=\"heading-primary--sub\">Find Parking</span>\n              </h1>\n              <SearchBar findParking={this.findParking}/>\n            </div>\n            <br/>\n            </header>\n      </div>\n    );\n  }\n\n}\n// <img src= {img} alt=\"Logo\" className=\"header__logo\"/>\n\n\nexport default withRouter(Home);\n","import React from 'react'\nimport {Link } from 'react-router-dom'\nclass NavBar extends React.Component{\n  render(){\n    return(\n      <div className=\"navbar\">\n      {!this.props.user ?(<div>\n        <Link to=\"/signup\" className=\"navbu\">SIGN UP</Link>\n        <Link to=\"/map\"className=\"navbu\">MAP</Link>\n        <Link to=\"/parkingform\"className=\"navbu\">Post a Parking Spot!</Link>\n        <Link to=\"/\" className=\"navbu\">HOME</Link>\n      </div>):(\n        <div>\n          <Link to=\"/\"className=\"navbu\" onClick={this.props.logOut}>LOG OUT</Link>\n          <Link to=\"/profile\" className=\"navbu\">PROFILE</Link>\n          <Link to=\"/\" className=\"navbu\">HOME</Link>\n        </div>\n        )}\n\n      </div>\n    )\n  }\n}\n\nexport default NavBar\n","import React from 'react';\n\nclass SignUp extends React.Component{\n\n  state = {\n    username:'',\n    password:'',\n    bio: \"\",\n    avatar:\"\"\n  }\n\n  handleChange= (e)=>{\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleSubmit = (e)=>{\n    e.preventDefault()\n    this.props.createNewUser(this.state)\n  }\n  render(){\n    return(\n      <div className=\"form\">\n        <h1>Sign Up </h1>\n        <form onChange={(e)=>this.handleChange(e)} onSubmit={(e)=>this.handleSubmit(e)}>\n          <input autoComplete=\"off\" type='text' name=\"username\"/>\n            <br/>\n            <br/>\n          <input autoComplete=\"off\" type='password' name=\"password\"/>\n            <br/>\n            <br/>\n          <input autoComplete=\"off\" type='text' name=\"bio\"/>\n            <br/>\n            <br/>\n          <input autoComplete=\"off\" type='text' name=\"avatar\"/>\n            <br/>\n            <br/>\n          <input autoComplete=\"off\" type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default SignUp\n","import React from 'react';\nimport {Redirect} from 'react-router-dom';\n\nclass Profile extends React.Component{\n  render(){\n    return(\n      <div className=\"under\">\n      {this.props.user ? (<div>\n        <h1>Hello Profile {this.props.user.username}!</h1>\n        <img alt=\"avatar\"src={this.props.user.avatar}/>\n        </div>):(<Redirect to='/'/>)}\n\n      </div>\n    )\n  }\n}\n\nexport default Profile\n","import React from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\n\nclass MapView extends React.Component {\n  static defaultProps = {\n    center: {\n      lat: 40.73,\n      lng: -73.93\n    },\n    zoom: 14\n  }\n  render(){\n    let parkingSpots= this.props.parkingSpots.map(spot=> <Marker position={{lat:spot.lat, lng:spot.lng}}/>)\n    return(\n      <div style={{ height: '100vh', width: '100%' }}>\n        <Map\n        google={this.props.google}\n          initialCenter={this.props.center}\n          zoom={this.props.zoom}>\n          <Marker position ={{lat:59.955413, lng:30.337844}}/>\n            {parkingSpots}\n        </Map>\n      </div>\n    )\n  }\n}\n\nexport default GoogleApiWrapper({apiKey: \"AIzaSyDS7fqSLY5L2xuXAb8cIb1vyQRKt5EPXmw\"}) (MapView)\n","import React from 'react';\nimport {\n  makeStyles\n} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Geocode from \"react-geocode\";\n\nGeocode.setApiKey(\"AIzaSyDS7fqSLY5L2xuXAb8cIb1vyQRKt5EPXmw\");\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n}));\n\nexport default function ParkingForm(props) {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    address: '',\n  });\n\n  const handleChange = address => event => {\n    setValues({ ...values,\n      [address]: event.target.value\n    });\n  };\n\n  const handleSubmit = (address)=>{\n    let addressObject = {address: address, fromRentor: true}\n    props.socket.emit('client:message', addressObject)\n\n  }\n\n  let getCurrentLocation = ()=>{\n    navigator.geolocation.getCurrentPosition(position=> console.log(position))\n  }\n\n\n\n  return (\n    <Card className = {classes.card}>\n      <CardActionArea >\n        <CardMedia className = {classes.media} image = \"../assets/parking_form_pic.jpeg\" title = \"Contemplative Reptile\" />\n          <CardContent >\n            <form>\n            {console.log(props.socket)}\n              <TextField id = \"outlined-name\"label = \"Address\"className = {classes.textField}\n              value = {values.address} onChange = {handleChange('address')} margin = \"normal\"variant = \"outlined\" />\n            </form>\n          </CardContent>\n      </CardActionArea>\n      <CardActions >\n        <Button onClick={()=>handleSubmit(values.address)}size = \"small\" color = \"primary\" >Find Parking!</Button>\n        <Button onClick={()=>getCurrentLocation()}size = \"small\" color = \"primary\" >Get Current Position!</Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React from 'react';\nimport Home from './Home'\nimport './App.css';\nimport NavBar from './components/NavBar'\nimport SignUp from './components/SignUp'\nimport Profile from './components/Profile'\nimport MapView from './components/MapView'\nimport ParkingForm from './components/ParkingForm'\nimport {Switch, Route, Redirect, withRouter} from 'react-router-dom'\nimport Popup from 'react-popup';\nimport HttpsRedirect from 'react-https-redirect';\n\nclass App extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n      user: null,\n      parkingSpots: [],\n      currentLocation:{lat:40.73,lng:-73.93},\n      isRentor: false,\n      socket: {}\n    }\n  }\n\n\n  componentDidMount(){\n      navigator.geolocation.getCurrentPosition(position=> this.setState({lat:position.coords.latitude,lng:position.coords.longitude}))\n  }\n\n  getParkingSpot = (spot) =>{\n    console.log(\"Parking Spot\", spot)\n    this.setState({\n      parkingSpots:[...this.state.parkingSpots, spot]})\n  }\n\n  getSocket = (socket)=>{\n    console.log(\"In App\",socket);\n    this.setState({socket: socket})\n  }\n\n  logOut = () => {\n    if (localStorage.getItem('token')) {\n      localStorage.removeItem('token')\n      this.setState({user: null})\n    } else {\n      return null\n    }\n  }\n\n  createNewUser = (user) => {\n    fetch('https://open-spaces-api.herokuapp.com/api/v1/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({user})\n    }).then(res => res.json()).then(res => {\n      localStorage.setItem(\"token\", res.jwt)\n      this.setState({user: res.user})\n      this.getProfile(res.jwt)\n    }).then(res => <Redirect to=\"/\"/>).catch(err => console.log(err))\n  }\n\n  logIn = (user) => {\n    fetch('https://open-spaces-api.herokuapp.com/api/v1/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({user})\n    }).then(res => res.json()).then(res => {\n      localStorage.setItem(\"token\", res.jwt)\n      this.setState({user: res.user})\n      this.getProfile(res.jwt)\n    }).catch(err => console.log(err))\n\n  }\n\n  getProfile = (token) => {\n    fetch('https://open-spaces-api.herokuapp.com/api/v1/profile', {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(res => this.setState({user: res.user}))\n  }\n\n  render() {\n    console.log(this.state.socket);\n    return (<div className=\"app-container\">\n    <HttpsRedirect>\n      <NavBar user={this.state.user} logOut={this.logOut}/>\n      <Popup />\n      <Switch>\n        <Route exact=\"exact\" path='/' render={() => <Home getParkingSpot={this.getParkingSpot} isRentor={this.state.isRentor} getSocket={this.getSocket}/>}/>\n        <Route exact=\"exact\" path='/parkingform' render={() => <ParkingForm getParkingSpot={this.getParkingSpot} socket={this.state.socket}/>}/>\n        <Route exact=\"exact\" path='/map' render={() => <MapView parkingSpots={this.state.parkingSpots} />}/>\n        <Route exact=\"exact\" path='/signup' render={() =>< SignUp createNewUser = {\n            this.createNewUser\n          } />}/>\n        <Route exact=\"exact\" path='/profile' render={() =>< Profile user = {\n            this.state.user\n          } />}/>\n      </Switch>\n      </HttpsRedirect>\n    </div>);\n  }\n\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n  <App />\n  </Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}