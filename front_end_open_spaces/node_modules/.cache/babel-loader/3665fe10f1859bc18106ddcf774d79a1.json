{"ast":null,"code":"var _jsxFileName = \"/Users/irvingrabel/Documents/Projects/Open_Spaces/front_end_open_spaces/src/components/CustomControl.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { render } from 'react-dom';\n\nclass MapControl extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return !this.props.map && nextProps.map;\n  }\n\n  componentDidMount() {\n    this._render();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this._render();\n  }\n\n  componentWillUnmount() {\n    const props = this.props;\n    if (!props.map) return;\n    const index = props.map.controls[props.controlPosition].getArray().indexOf(this.el);\n    props.map.controls[props.controlPosition].removeAt(index);\n  }\n\n  _render() {\n    const props = this.props;\n    if (!props.map || !props.controlPosition) return;\n    render(React.createElement(\"div\", {\n      ref: el => {\n        if (!this.renderedOnce) {\n          this.el = el;\n          props.map.controls[props.controlPosition].push(el);\n        } else if (el && this.el && el !== this.el) {\n          this.el.innerHTML = '';\n          [].slice.call(el.childNodes).forEach(child => this.el.appendChild(child));\n        }\n\n        this.renderedOnce = true;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, props.children), document.createElement('div'));\n  }\n\n  render() {\n    return React.createElement(\"noscript\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    });\n  }\n\n}\n\nMapControl.propTypes = {\n  controlPosition: PropTypes.number\n};\nexport default MapControl;","map":{"version":3,"sources":["/Users/irvingrabel/Documents/Projects/Open_Spaces/front_end_open_spaces/src/components/CustomControl.js"],"names":["React","Component","PropTypes","render","MapControl","shouldComponentUpdate","nextProps","nextState","props","map","componentDidMount","_render","componentDidUpdate","prevProps","prevState","componentWillUnmount","index","controls","controlPosition","getArray","indexOf","el","removeAt","renderedOnce","push","innerHTML","slice","call","childNodes","forEach","child","appendChild","children","document","createElement","propTypes","number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAKjCI,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAC1C,WAAO,CAAC,KAAKC,KAAL,CAAWC,GAAZ,IAAmBH,SAAS,CAACG,GAApC;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,OAAL;AACD;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,SAAKH,OAAL;AACD;;AAEDI,EAAAA,oBAAoB,GAAG;AAAA,UACfP,KADe,GACL,IADK,CACfA,KADe;AAErB,QAAI,CAACA,KAAK,CAACC,GAAX,EAAgB;AAClB,UAAMO,KAAK,GAAGR,KAAK,CAACC,GAAN,CAAUQ,QAAV,CAAmBT,KAAK,CAACU,eAAzB,EAA0CC,QAA1C,GAAqDC,OAArD,CAA6D,KAAKC,EAAlE,CAAd;AACAb,IAAAA,KAAK,CAACC,GAAN,CAAUQ,QAAV,CAAmBT,KAAK,CAACU,eAAzB,EAA0CI,QAA1C,CAAmDN,KAAnD;AACA;;AAEAL,EAAAA,OAAO,GAAG;AAAA,UACAH,KADA,GACU,IADV,CACAA,KADA;AAER,QAAI,CAACA,KAAK,CAACC,GAAP,IAAc,CAACD,KAAK,CAACU,eAAzB,EAA0C;AAC1Cf,IAAAA,MAAM,CACJ;AAAK,MAAA,GAAG,EAAEkB,EAAE,IAAI;AACd,YAAI,CAAC,KAAKE,YAAV,EAAwB;AACtB,eAAKF,EAAL,GAAUA,EAAV;AACAb,UAAAA,KAAK,CAACC,GAAN,CAAUQ,QAAV,CAAmBT,KAAK,CAACU,eAAzB,EAA0CM,IAA1C,CAA+CH,EAA/C;AACD,SAHD,MAGO,IAAIA,EAAE,IAAI,KAAKA,EAAX,IAAiBA,EAAE,KAAK,KAAKA,EAAjC,EAAqC;AAC1C,eAAKA,EAAL,CAAQI,SAAR,GAAoB,EAApB;AACA,aAAGC,KAAH,CAASC,IAAT,CAAcN,EAAE,CAACO,UAAjB,EAA6BC,OAA7B,CAAqCC,KAAK,IAAI,KAAKT,EAAL,CAAQU,WAAR,CAAoBD,KAApB,CAA9C;AACD;;AACD,aAAKP,YAAL,GAAoB,IAApB;AACD,OATD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUGf,KAAK,CAACwB,QAVT,CADI,EAaJC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAbI,CAAN;AAeD;;AAED/B,EAAAA,MAAM,GAAG;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AA9CgC;;AAA7BC,U,CACG+B,S,GAAY;AACjBjB,EAAAA,eAAe,EAAEhB,SAAS,CAACkC;AADV,C;AAgDrB,eAAehC,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { render } from 'react-dom'\n\nclass MapControl extends Component {\n  static propTypes = {\n    controlPosition: PropTypes.number,\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !this.props.map && nextProps.map\n  }\n\n  componentDidMount() {\n    this._render()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this._render()\n  }\n\n  componentWillUnmount() {\n\t\tconst { props } = this\n    if (!props.map) return\n\t\tconst index = props.map.controls[props.controlPosition].getArray().indexOf(this.el)\n\t\tprops.map.controls[props.controlPosition].removeAt(index)\n\t}\n\n  _render() {\n    const { props } = this\n    if (!props.map || !props.controlPosition) return\n    render(\n      <div ref={el => {\n        if (!this.renderedOnce) {\n          this.el = el\n          props.map.controls[props.controlPosition].push(el)\n        } else if (el && this.el && el !== this.el) {\n          this.el.innerHTML = '';\n          [].slice.call(el.childNodes).forEach(child => this.el.appendChild(child))\n        }\n        this.renderedOnce = true\n      }}>\n        {props.children}\n      </div>,\n      document.createElement('div')\n    )\n  }\n\n  render() {\n    return <noscript/>\n  }\n}\n\nexport default MapControl\n"]},"metadata":{},"sourceType":"module"}