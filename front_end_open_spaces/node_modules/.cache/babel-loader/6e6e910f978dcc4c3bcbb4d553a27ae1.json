{"ast":null,"code":"var _jsxFileName = \"/Users/irvingrabel/Documents/Projects/Open_Spaces/front_end_open_spaces/src/App.js\";\nimport React from 'react';\nimport Home from './Home';\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport SignUp from './components/SignUp';\nimport Profile from './components/Profile';\nimport MapView from './components/MapView';\nimport ParkingForm from './components/ParkingForm';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Popup from 'react-popup';\nimport HttpsRedirect from 'react-https-redirect';\nimport { GoogleApiWrapper } from 'google-maps-react';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getCurrentLocation = location => {\n      this.setState({\n        currentLocation: location\n      });\n    };\n\n    this.getParkingSpot = spot => {\n      this.setState({\n        parkingSpots: [...this.state.parkingSpots, spot]\n      });\n    };\n\n    this.getSocket = socket => {\n      this.setState({\n        socket: socket\n      });\n    };\n\n    this.grabRecenter = func => {\n      this.setState({\n        recenterMap: func\n      });\n    };\n\n    this.logOut = () => {\n      if (localStorage.getItem('token')) {\n        localStorage.removeItem('token');\n        this.setState({\n          user: null\n        });\n      } else {\n        return null;\n      }\n    };\n\n    this.createNewUser = user => {\n      fetch('https://open-spaces-api.herokuapp.com/api/v1/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        },\n        body: JSON.stringify({\n          user\n        })\n      }).then(res => res.json()).then(res => {\n        localStorage.setItem(\"token\", res.jwt);\n        this.setState({\n          user: res.user\n        });\n        this.getProfile(res.jwt);\n      }).then(res => React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })).catch(err => console.log(err));\n    };\n\n    this.logIn = user => {\n      fetch('https://open-spaces-api.herokuapp.com/api/v1/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        },\n        body: JSON.stringify({\n          user\n        })\n      }).then(res => res.json()).then(res => {\n        localStorage.setItem(\"token\", res.jwt);\n        this.setState({\n          user: res.user\n        });\n        this.getProfile(res.jwt);\n      }).catch(err => console.log(err));\n    };\n\n    this.getProfile = token => {\n      fetch('https://open-spaces-api.herokuapp.com/api/v1/profile', {\n        method: 'GET',\n        headers: {\n          Authorization: \"Bearer \".concat(token)\n        }\n      }).then(res => res.json()).then(res => this.setState({\n        user: res.user\n      }));\n    };\n\n    this.state = {\n      user: null,\n      parkingSpots: [],\n      currentLocation: {\n        lat: 40.73,\n        lng: -73.93\n      },\n      isRentor: false,\n      socket: {},\n      recenterMap: null\n    };\n  }\n\n  componentDidMount() {\n    navigator.geolocation.watchPosition(pos => {\n      const coords = pos.coords;\n      this.setState({\n        currentLocation: {\n          lat: coords.latitude,\n          lng: coords.longitude\n        }\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state.currentLocation);\n    return React.createElement(\"div\", {\n      className: \"app-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(HttpsRedirect, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      user: this.state.user,\n      logOut: this.logOut,\n      recenterMap: this.state.recenterMap,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(Popup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: \"exact\",\n      path: \"/\",\n      render: () => React.createElement(Home, {\n        google: this.props.google,\n        getParkingSpot: this.getParkingSpot,\n        currentLocation: this.state.currentLocation,\n        isRentor: this.state.isRentor,\n        getSocket: this.getSocket,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: \"exact\",\n      path: \"/parkingform\",\n      render: () => React.createElement(ParkingForm, {\n        getParkingSpot: this.getParkingSpot,\n        socket: this.state.socket,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: \"exact\",\n      path: \"/map\",\n      render: () => React.createElement(MapView, {\n        getCurrentLocation: this.getCurrentLocation,\n        grabRecenter: this.grabRecenter,\n        parkingSpots: this.state.parkingSpots,\n        center: this.state.currentLocation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: \"exact\",\n      path: \"/signup\",\n      render: () => React.createElement(SignUp, {\n        createNewUser: this.createNewUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: \"exact\",\n      path: \"/profile\",\n      render: () => React.createElement(Profile, {\n        user: this.state.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDS7fqSLY5L2xuXAb8cIb1vyQRKt5EPXmw\"\n})(App);","map":{"version":3,"sources":["/Users/irvingrabel/Documents/Projects/Open_Spaces/front_end_open_spaces/src/App.js"],"names":["React","Home","NavBar","SignUp","Profile","MapView","ParkingForm","Switch","Route","Redirect","Popup","HttpsRedirect","GoogleApiWrapper","App","Component","constructor","getCurrentLocation","location","setState","currentLocation","getParkingSpot","spot","parkingSpots","state","getSocket","socket","grabRecenter","func","recenterMap","logOut","localStorage","getItem","removeItem","user","createNewUser","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","setItem","jwt","getProfile","catch","err","console","log","logIn","token","Authorization","lat","lng","isRentor","componentDidMount","navigator","geolocation","watchPosition","pos","coords","latitude","longitude","render","props","google","apiKey"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Home from './Home'\nimport './App.css';\nimport NavBar from './components/NavBar'\nimport SignUp from './components/SignUp'\nimport Profile from './components/Profile'\nimport MapView from './components/MapView'\nimport ParkingForm from './components/ParkingForm'\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport Popup from 'react-popup';\nimport HttpsRedirect from 'react-https-redirect';\nimport {GoogleApiWrapper} from 'google-maps-react';\n\nclass App extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n      user: null,\n      parkingSpots: [],\n      currentLocation:{lat:40.73,lng:-73.93},\n      isRentor: false,\n      socket: {},\n      recenterMap: null\n    }\n  }\n\n  componentDidMount(){\n    navigator.geolocation.watchPosition(pos => {\n      const coords = pos.coords;\n      this.setState({\n        currentLocation: {\n          lat: coords.latitude,\n          lng: coords.longitude\n        }\n      });\n    });\n  }\n\n  getCurrentLocation = (location)=>{\n    this.setState({currentLocation:location})\n  }\n\n\n  getParkingSpot = (spot) =>{\n    this.setState({\n      parkingSpots:[...this.state.parkingSpots, spot]})\n  }\n\n  getSocket = (socket)=>{\n    this.setState({socket: socket})\n  }\n  grabRecenter = (func)=>{\n    this.setState({\n      recenterMap: func\n    })\n  }\n\n  logOut = () => {\n    if (localStorage.getItem('token')) {\n      localStorage.removeItem('token')\n      this.setState({user: null})\n    } else {\n      return null\n    }\n  }\n\n  createNewUser = (user) => {\n    fetch('https://open-spaces-api.herokuapp.com/api/v1/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({user})\n    }).then(res => res.json()).then(res => {\n      localStorage.setItem(\"token\", res.jwt)\n      this.setState({user: res.user})\n      this.getProfile(res.jwt)\n    }).then(res => <Redirect to=\"/\"/>).catch(err => console.log(err))\n  }\n\n  logIn = (user) => {\n    fetch('https://open-spaces-api.herokuapp.com/api/v1/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({user})\n    }).then(res => res.json()).then(res => {\n      localStorage.setItem(\"token\", res.jwt)\n      this.setState({user: res.user})\n      this.getProfile(res.jwt)\n    }).catch(err => console.log(err))\n\n  }\n\n  getProfile = (token) => {\n    fetch('https://open-spaces-api.herokuapp.com/api/v1/profile', {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(res => this.setState({user: res.user}))\n  }\n\n  render() {\n    console.log(this.state.currentLocation);\n    return (<div className=\"app-container\">\n    <HttpsRedirect>\n      <NavBar user={this.state.user} logOut={this.logOut} recenterMap={this.state.recenterMap}/>\n      <Popup />\n      <Switch>\n        <Route exact=\"exact\" path='/' render={() => <Home google={this.props.google}getParkingSpot={this.getParkingSpot} currentLocation={this.state.currentLocation}isRentor={this.state.isRentor} getSocket={this.getSocket}/>}/>\n        <Route exact=\"exact\" path='/parkingform' render={() => <ParkingForm getParkingSpot={this.getParkingSpot} socket={this.state.socket}/>}/>\n        <Route exact=\"exact\" path='/map' render={() => <MapView getCurrentLocation ={this.getCurrentLocation}grabRecenter={this.grabRecenter}parkingSpots={this.state.parkingSpots} center={this.state.currentLocation} />}/>\n        <Route exact=\"exact\" path='/signup' render={() =>< SignUp createNewUser = {\n            this.createNewUser\n          } />}/>\n        <Route exact=\"exact\" path='/profile' render={() =>< Profile user = {\n            this.state.user\n          } />}/>\n      </Switch>\n      </HttpsRedirect>\n    </div>);\n  }\n\n}\n\nexport default GoogleApiWrapper({apiKey: \"AIzaSyDS7fqSLY5L2xuXAb8cIb1vyQRKt5EPXmw\"})(App);\n"]},"metadata":{},"sourceType":"module"}