{"ast":null,"code":"var _jsxFileName = \"/Users/irvingrabel/Documents/Projects/Open_Spaces/front_end_open_spaces/src/components/MapView.js\";\nimport React from 'react';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n};\n\nclass MapView extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showingInfoWindow: {},\n      activeMarker: {},\n      selectedPlaces: {}\n    };\n\n    this.onMarkerClick = (props, marker, e) => {\n      this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n    };\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n  }\n\n  render() {\n    let parkingSpots = this.props.parkingSpots.map(spot => React.createElement(Marker, {\n      position: {\n        lat: spot.lat,\n        lng: spot.lng\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      style: {\n        height: '100vh',\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Map, {\n      google: this.props.google,\n      initialCenter: this.props.center,\n      style: mapStyles,\n      zoom: this.props.zoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      position: {\n        lat: 59.955413,\n        lng: 30.337844\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), parkingSpots));\n  }\n\n}\n\nMapView.defaultProps = {\n  zoom: 14\n};\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDS7fqSLY5L2xuXAb8cIb1vyQRKt5EPXmw\"\n})(MapView);","map":{"version":3,"sources":["/Users/irvingrabel/Documents/Projects/Open_Spaces/front_end_open_spaces/src/components/MapView.js"],"names":["React","Map","GoogleApiWrapper","Marker","InfoWindow","mapStyles","width","height","MapView","Component","state","showingInfoWindow","activeMarker","selectedPlaces","onMarkerClick","props","marker","e","setState","selectedPlace","onClose","render","parkingSpots","map","spot","lat","lng","google","center","zoom","defaultProps","apiKey"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,gBAAd,EAAgCC,MAAhC,EAAwCC,UAAxC,QAAyD,mBAAzD;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,MADS;AAEhBC,EAAAA,MAAM,EAAE;AAFQ,CAAlB;;AAMA,MAAMC,OAAN,SAAsBR,KAAK,CAACS,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCC,KADoC,GAC5B;AACNC,MAAAA,iBAAiB,EAAE,EADb;AAENC,MAAAA,YAAY,EAAE,EAFR;AAGNC,MAAAA,cAAc,EAAE;AAHV,KAD4B;;AAAA,SAUpCC,aAVoC,GAUrB,CAACC,KAAD,EAAQC,MAAR,EAAgBC,CAAhB,KAAoB;AACjC,WAAKC,QAAL,CAAc;AACZC,QAAAA,aAAa,EAACJ,KADF;AAEZH,QAAAA,YAAY,EAAEI,MAFF;AAGZL,QAAAA,iBAAiB,EAAE;AAHP,OAAd;AAKD,KAhBmC;;AAAA,SAkBpCS,OAlBoC,GAkBzBL,KAAD,IAAS;AACjB,UAAI,KAAKL,KAAL,CAAWC,iBAAf,EAAkC;AAChC,aAAKO,QAAL,CAAc;AACZP,UAAAA,iBAAiB,EAAE,KADP;AAEZC,UAAAA,YAAY,EAAC;AAFD,SAAd;AAID;AACF,KAzBmC;AAAA;;AA2BpCS,EAAAA,MAAM,GAAE;AACN,QAAIC,YAAY,GAAE,KAAKP,KAAL,CAAWO,YAAX,CAAwBC,GAAxB,CAA4BC,IAAI,IAAG,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE;AAACC,QAAAA,GAAG,EAACD,IAAI,CAACC,GAAV;AAAeC,QAAAA,GAAG,EAACF,IAAI,CAACE;AAAxB,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnC,CAAlB;AACA,WACE;AAAK,MAAA,KAAK,EAAE;AAAEnB,QAAAA,MAAM,EAAE,OAAV;AAAmBD,QAAAA,KAAK,EAAE;AAA1B,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AACA,MAAA,MAAM,EAAE,KAAKS,KAAL,CAAWY,MADnB;AAEE,MAAA,aAAa,EAAE,KAAKZ,KAAL,CAAWa,MAF5B;AAGE,MAAA,KAAK,EAAEvB,SAHT;AAIE,MAAA,IAAI,EAAE,KAAKU,KAAL,CAAWc,IAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAG;AAACJ,QAAAA,GAAG,EAAC,SAAL;AAAgBC,QAAAA,GAAG,EAAC;AAApB,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAMKJ,YANL,CADF,CADF;AAYD;;AAzCmC;;AAAhCd,O,CAMGsB,Y,GAAe;AACpBD,EAAAA,IAAI,EAAE;AADc,C;AAsCxB,eAAe3B,gBAAgB,CAAC;AAAC6B,EAAAA,MAAM,EAAE;AAAT,CAAD,CAAhB,CAAuEvB,OAAvE,CAAf","sourcesContent":["import React from 'react';\nimport { Map, GoogleApiWrapper, Marker, InfoWindow} from 'google-maps-react';\n\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n};\n\n\nclass MapView extends React.Component {\n  state = {\n    showingInfoWindow: {},\n    activeMarker: {},\n    selectedPlaces: {}\n  }\n  static defaultProps = {\n    zoom: 14\n  }\n\n  onMarkerClick =(props, marker, e)=>{\n    this.setState({\n      selectedPlace:props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    })\n  }\n\n  onClose = (props)=>{\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker:null\n      })\n    }\n  }\n\n  render(){\n    let parkingSpots= this.props.parkingSpots.map(spot=> <Marker position={{lat:spot.lat, lng:spot.lng}}/>)\n    return(\n      <div style={{ height: '100vh', width: '100%' }}>\n        <Map\n        google={this.props.google}\n          initialCenter={this.props.center}\n          style={mapStyles}\n          zoom={this.props.zoom}>\n          <Marker position ={{lat:59.955413, lng:30.337844}}/>\n            {parkingSpots}\n        </Map>\n      </div>\n    )\n  }\n}\n\nexport default GoogleApiWrapper({apiKey: \"AIzaSyDS7fqSLY5L2xuXAb8cIb1vyQRKt5EPXmw\"}) (MapView)\n"]},"metadata":{},"sourceType":"module"}