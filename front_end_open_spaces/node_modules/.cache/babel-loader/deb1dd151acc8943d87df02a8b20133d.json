{"ast":null,"code":"var _jsxFileName = \"/Users/irvingrabel/Documents/Projects/Open_Spaces/front_end_open_spaces/src/Home.js\";\nimport React from 'react';\nimport './Home.css';\nimport SearchBar from \"./components/SearchBar\";\nimport Geocode from \"react-geocode\";\nimport io from 'socket.io-client';\nimport config from './config';\nGeocode.setApiKey(\"AIzaSyDS7fqSLY5L2xuXAb8cIb1vyQRKt5EPXmw\");\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n    this.socket = {};\n\n    this.addAddress = address => {\n      // Append the addres to the component state\n      const addresses = this.state.addresses;\n      addresses.push(address);\n      this.setState({\n        address\n      });\n    };\n\n    this.findParking = input => {\n      Geocode.fromAddress(input).then(response => {\n        const locationObject = response.results[0].geometry.location;\n        console.log(locationObject);\n        this.socket.emit('client:message', locationObject);\n        locationObject.fromRentee = true;\n        this.addAddress(locationObject);\n      }, error => {\n        console.error(error);\n      });\n    };\n\n    this.state = {\n      addresses: []\n    };\n    this.socket = io(config.api).connect();\n    this.socket.on('server:message', location => {\n      this.addAddress(location);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"home-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header__logo-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"header__text-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"heading-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"heading-primary--main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Open Spaces\"), React.createElement(\"span\", {\n      className: \"heading-primary--sub\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Find Parking\")), React.createElement(SearchBar, {\n      findParking: this.findParking,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })));\n  }\n\n} // <img src= {img} alt=\"Logo\" className=\"header__logo\"/>\n\n\nexport default Home;","map":{"version":3,"sources":["/Users/irvingrabel/Documents/Projects/Open_Spaces/front_end_open_spaces/src/Home.js"],"names":["React","SearchBar","Geocode","io","config","setApiKey","Home","Component","constructor","socket","addAddress","address","addresses","state","push","setState","findParking","input","fromAddress","then","response","locationObject","results","geometry","location","console","log","emit","fromRentee","error","api","connect","on","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEAF,OAAO,CAACG,SAAR,CAAkB,yCAAlB;;AAEA,MAAMC,IAAN,SAAmBN,KAAK,CAACO,SAAzB,CAAkC;AAGhCC,EAAAA,WAAW,GAAE;AACX;AADW,SAFbC,MAEa,GAFJ,EAEI;;AAAA,SAWbC,UAXa,GAWAC,OAAD,IAAW;AACnB;AACA,YAAMC,SAAS,GAAG,KAAKC,KAAL,CAAWD,SAA7B;AACAA,MAAAA,SAAS,CAACE,IAAV,CAAeH,OAAf;AACA,WAAKI,QAAL,CAAc;AAAEJ,QAAAA;AAAF,OAAd;AACD,KAhBU;;AAAA,SAkBbK,WAlBa,GAkBEC,KAAD,IAAS;AACrBf,MAAAA,OAAO,CAACgB,WAAR,CAAoBD,KAApB,EAA2BE,IAA3B,CACFC,QAAQ,IAAI;AACV,cAAMC,cAAc,GAAGD,QAAQ,CAACE,OAAT,CAAiB,CAAjB,EAAoBC,QAApB,CAA6BC,QAApD;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYL,cAAZ;AACA,aAAKZ,MAAL,CAAYkB,IAAZ,CAAiB,gBAAjB,EAAmCN,cAAnC;AACAA,QAAAA,cAAc,CAACO,UAAf,GAA4B,IAA5B;AACA,aAAKlB,UAAL,CAAgBW,cAAhB;AACD,OAPC,EAQFQ,KAAK,IAAI;AACPJ,QAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd;AACD,OAVC;AAYD,KA/BY;;AAEX,SAAKhB,KAAL,GAAa;AACXD,MAAAA,SAAS,EAAC;AADC,KAAb;AAGA,SAAKH,MAAL,GAAcN,EAAE,CAACC,MAAM,CAAC0B,GAAR,CAAF,CAAeC,OAAf,EAAd;AACA,SAAKtB,MAAL,CAAYuB,EAAZ,CAAe,gBAAf,EAAiCR,QAAQ,IAAI;AAC3C,WAAKd,UAAL,CAAgBc,QAAhB;AACD,KAFD;AAGD;;AAuBHS,EAAAA,MAAM,GAAE;AACN,WACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADN,EAGM;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAM,MAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,CADF,EAKE,oBAAC,SAAD;AAAW,MAAA,WAAW,EAAE,KAAKjB,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CAHN,EAUM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVN,CADA,CADJ;AAgBC;;AApD+B,C,CAuDlC;;;AAGA,eAAeV,IAAf","sourcesContent":["import React from 'react';\nimport './Home.css';\nimport SearchBar from \"./components/SearchBar\";\nimport Geocode from \"react-geocode\";\nimport io from 'socket.io-client';\nimport config from './config';\n\nGeocode.setApiKey(\"AIzaSyDS7fqSLY5L2xuXAb8cIb1vyQRKt5EPXmw\");\n\nclass Home extends React.Component{\n  socket = {};\n\n  constructor(){\n    super()\n    this.state = {\n      addresses:[],\n    }\n    this.socket = io(config.api).connect()\n    this.socket.on('server:message', location => {\n      this.addAddress(location)\n    })\n  }\n\n  addAddress =(address)=>{\n      // Append the addres to the component state\n      const addresses = this.state.addresses\n      addresses.push(address)\n      this.setState({ address })\n    }\n\n  findParking = (input)=>{\n    Geocode.fromAddress(input).then(\n  response => {\n    const locationObject = response.results[0].geometry.location;\n    console.log(locationObject);\n    this.socket.emit('client:message', locationObject)\n    locationObject.fromRentee = true;\n    this.addAddress(locationObject);\n  },\n  error => {\n    console.error(error);\n  }\n);\n  }\nrender(){\n  return (\n      <div className=\"home-container\">\n      <header className='header'>\n            <div className=\"header__logo-box\">\n            </div>\n            <div className=\"header__text-box\">\n              <h1 className=\"heading-primary\">\n                <span className=\"heading-primary--main\">Open Spaces</span>\n                <span className=\"heading-primary--sub\">Find Parking</span>\n              </h1>\n              <SearchBar findParking={this.findParking}/>\n            </div>\n            <br/>\n            </header>\n      </div>\n    );\n  }\n\n}\n// <img src= {img} alt=\"Logo\" className=\"header__logo\"/>\n\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}