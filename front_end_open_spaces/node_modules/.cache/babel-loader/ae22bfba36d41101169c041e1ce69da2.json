{"ast":null,"code":"var _jsxFileName = \"/Users/irvingrabel/Documents/Projects/Open_Spaces/front_end_open_spaces/src/components/SearchBar.js\";\nimport React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\n\nconst styles = theme => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 400\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n});\n\nclass SearchBar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      address: \"\"\n    };\n\n    this.handleChange = input => {\n      this.setState({\n        address: input\n      });\n    };\n\n    this.handleSelect = address => {\n      geocodeByAddress(address).then(results => getLatLng(results[0])).then(latLng => console.log('Success', latLng)).catch(error => console.error('Error', error));\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(PlacesAutocomplete, {\n      value: this.state.address,\n      onChange: this.handleChange,\n      onSelect: this.handleSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, ({\n      getInputProps,\n      suggestions,\n      getSuggestionItemProps,\n      loading\n    }) => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      className: classes.iconButton,\n      \"aria-label\": \"menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(MenuIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(InputBase, Object.assign({}, getInputProps({\n      placeholder: 'Search Open Spaces',\n      className: \"\".concat(classes.input)\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(IconButton, {\n      className: classes.iconButton,\n      \"aria-label\": \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(SearchIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      className: classes.divider,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(IconButton, {\n      onClick: () => this.props.findParking(this.state.address),\n      color: \"primary\",\n      className: classes.iconButton,\n      \"aria-label\": \"directions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(DirectionsIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"autocomplete-dropdown-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, loading && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Loading...\"), suggestions.map(suggestion => {\n      const className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item'; // inline style for demonstration purpose\n\n      const style = suggestion.active ? {\n        backgroundColor: '#fafafa',\n        cursor: 'pointer'\n      } : {\n        backgroundColor: '#ffffff',\n        cursor: 'pointer'\n      };\n      return React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion, {\n        className,\n        style\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, suggestion.description));\n    }))));\n  }\n\n}\n\nSearchBar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SearchBar);","map":{"version":3,"sources":["/Users/irvingrabel/Documents/Projects/Open_Spaces/front_end_open_spaces/src/components/SearchBar.js"],"names":["React","Paper","InputBase","Divider","IconButton","MenuIcon","SearchIcon","DirectionsIcon","PropTypes","withStyles","PlacesAutocomplete","geocodeByAddress","getLatLng","styles","theme","root","padding","display","alignItems","width","input","marginLeft","flex","iconButton","divider","height","margin","SearchBar","Component","state","address","handleChange","setState","handleSelect","then","results","latLng","console","log","catch","error","render","classes","props","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","findParking","map","suggestion","active","style","backgroundColor","cursor","description","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/styles';\nimport PlacesAutocomplete, {geocodeByAddress,getLatLng,} from 'react-places-autocomplete';\n\nconst styles = theme=>({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 400,\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4,\n  },\n});\n\n class SearchBar extends React.Component{\n  state = {\n    address: \"\"\n  }\n\n   handleChange = (input)=>{\n     this.setState({address: input})\n   }\n\n   handleSelect = address => {\n    geocodeByAddress(address)\n      .then(results => getLatLng(results[0]))\n      .then(latLng => console.log('Success', latLng))\n      .catch(error => console.error('Error', error));\n  };\nrender(){\n  const {classes} = this.props\n  return (\n    <PlacesAutocomplete value={this.state.address} onChange={this.handleChange}onSelect={this.handleSelect}>\n    {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n      <div>\n      <IconButton className={classes.iconButton} aria-label=\"menu\">\n      <MenuIcon />\n      </IconButton>\n        <InputBase\n          {...getInputProps({\n            placeholder: 'Search Open Spaces',\n            className: `${classes.input}`,\n          })}\n        />\n        <IconButton className={classes.iconButton} aria-label=\"search\">\n        <SearchIcon />\n        </IconButton>\n        <Divider className={classes.divider} />\n        <IconButton onClick={()=>this.props.findParking(this.state.address)}color=\"primary\" className={classes.iconButton} aria-label=\"directions\">\n        <DirectionsIcon />\n        </IconButton>\n        <div className=\"autocomplete-dropdown-container\">\n          {loading && <div>Loading...</div>}\n          {suggestions.map(suggestion => {\n            const className = suggestion.active\n              ? 'suggestion-item--active'\n              : 'suggestion-item';\n            // inline style for demonstration purpose\n            const style = suggestion.active\n              ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n              : { backgroundColor: '#ffffff', cursor: 'pointer' };\n            return (\n              <div\n                {...getSuggestionItemProps(suggestion, {\n                  className,\n                  style,\n                })}\n              >\n                <span>{suggestion.description}</span>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    )}\n    </PlacesAutocomplete>\n  );\n\n}\n}\n\nSearchBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SearchBar)\n"]},"metadata":{},"sourceType":"module"}