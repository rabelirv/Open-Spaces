{"ast":null,"code":"import _objectSpread from \"/Users/irvingrabel/Documents/Projects/Open_Spaces/front_end_open_spaces/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/irvingrabel/Documents/Projects/Open_Spaces/front_end_open_spaces/src/Home.js\";\nimport React from 'react';\nimport './Home.css';\nimport SearchBar from \"./components/SearchBar\";\nimport Geocode from \"react-geocode\";\nimport io from 'socket.io-client';\nimport config from './config';\nimport Popup from 'react-popup';\nimport { withRouter } from 'react-router-dom';\nGeocode.setApiKey(\"AIzaSyDS7fqSLY5L2xuXAb8cIb1vyQRKt5EPXmw\");\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n    this.socket = {};\n\n    this.withinRegion = (point, position, radius) => {\n      const google = window.google;\n      const to = new google.maps.LatLng(position.lat, position.lng);\n      const distance = google.maps.geometry.spherical.computeDistanceBetween;\n      const from = new google.maps.LatLng(point.lat, point.lng);\n      console.log(distance(from, to), radius);\n      return distance(from, to) <= radius;\n    };\n\n    this.addAddress = address => {\n      this.setState({\n        addresses: [...this.state.addresses, address]\n      });\n    };\n\n    this.promptUser = data => {\n      let goToParkingForm = () => this.props.history.push('/parkingform');\n\n      Popup.create({\n        title: null,\n        content: \"A User is requesting a Parking Spot at \".concat(data.address, \"! Do you accept?\"),\n        buttons: {\n          left: [{\n            text: '👎',\n            action: function () {\n              Popup.close();\n            }\n          }],\n          right: [{\n            text: '👍',\n            action: function () {\n              Popup.close(); // Passing true as the second argument to the create method\n              // displays it directly, without interupting the queue.\n\n              goToParkingForm();\n              Popup.create({\n                title: null,\n                content: 'We are waiting for the Rentee to confirm!',\n                buttons: {\n                  left: [{\n                    text: '👍',\n                    action: () => {\n                      Popup.close();\n                    }\n                  }]\n                }\n              });\n            }\n          }]\n        }\n      });\n    };\n\n    this.confirmParkingSpot = data => {\n      let addParkingSpot = spot => this.setState(_objectSpread({}, this.state, {\n        parkingSpots: [...this.state.parkingSpots, spot]\n      }));\n\n      let goToMap = () => this.props.history.push('/map');\n\n      let getParkingSpot = locationObject => this.props.getParkingSpot(locationObject);\n\n      console.log(\"socket\", data);\n      Popup.create({\n        title: null,\n        content: \"A Rentor has found \".concat(data.spotsNum, \" at \").concat(data.address, \", is this ok?\"),\n        buttons: {\n          left: [{\n            text: '👍',\n            action: function () {\n              Popup.close();\n            }\n          }],\n          right: [{\n            text: \"\\uD83D\\uDE00\",\n            key: 'ctrl+enter',\n            action: function () {\n              // Passing true as the second argument to the create method\n              // displays it directly, without interupting the queue.\n              goToMap();\n              let parkingObject = {};\n              Geocode.fromAddress(data.address).then(response => {\n                const _response$results$0$g = response.results[0].geometry.location,\n                      lat = _response$results$0$g.lat,\n                      lng = _response$results$0$g.lng;\n                getParkingSpot({\n                  lat,\n                  lng\n                });\n                parkingObject.parkingSpot = {\n                  lat,\n                  lng\n                };\n                parkingObject.fromRentor = true;\n                addParkingSpot(parkingObject);\n              }, error => {\n                console.error(error);\n              });\n              Popup.close();\n              Popup.create({\n                title: null,\n                content: 'Here is your parking spot, start walking towards it!',\n                buttons: {\n                  left: [{\n                    text: '👍',\n                    action: () => {\n                      Popup.close();\n                    }\n                  }]\n                }\n              });\n            }\n          }]\n        }\n      });\n    };\n\n    this.findParking = input => {\n      Geocode.fromAddress(input).then(response => {\n        const locationObject = response.results[0].geometry.location;\n        console.log(\"locationObject\", locationObject);\n        this.addAddress(locationObject);\n        locationObject.fromRentee = true;\n        locationObject.address = input;\n        locationObject.currentLocation = this.props.currentLocation;\n        this.socket.emit('client:message', locationObject);\n      }, error => {\n        console.error(error);\n      });\n    };\n\n    this.state = {\n      addresses: [],\n      distance: \"\",\n      parkingSpots: []\n    };\n    this.socket = io(config.api).connect();\n  }\n\n  componentDidMount() {\n    this.socket.on('server:message', data => {\n      console.log(\"Server Message\", data);\n      let distanceMatrix = this.props.google.maps.DistanceMatrixService.prototype;\n      distanceMatrix.getDistanceMatrix({\n        origins: [this.props.currentLocation],\n        destinations: [data.currentLocation],\n        travelMode: 'DRIVING',\n        unitSystem: this.props.google.maps.UnitSystem.IMPERIAL\n      }, (res, status) => {\n        if (status === \"OK\") {\n          this.setState(_objectSpread({}, this.state.addresses, {\n            distance: res.rows[0].elements[0].distance.value\n          }));\n\n          if (data.fromRentee && this.state.distance <= 8046.72) {\n            this.promptUser(data);\n          } else if (data.address !== undefined && data.fromRentor) {\n            this.confirmParkingSpot(data);\n          }\n        } else {\n          console.error(\"status:\", status);\n        }\n      });\n\n      if (data.address !== undefined && data.fromRentor) {\n        this.confirmParkingSpot(data);\n      }\n\n      this.props.getSocket(this.socket);\n    });\n  }\n\n  render() {\n    console.log(this.state.parkingSpots);\n    return React.createElement(\"div\", {\n      className: \"home-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header__logo-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"header__text-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"heading-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"heading-primary--main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Open Spaces\"), React.createElement(\"span\", {\n      className: \"heading-primary--sub\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Find Parking\")), React.createElement(SearchBar, {\n      findParking: this.findParking,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRouter(Home);","map":{"version":3,"sources":["/Users/irvingrabel/Documents/Projects/Open_Spaces/front_end_open_spaces/src/Home.js"],"names":["React","SearchBar","Geocode","io","config","Popup","withRouter","setApiKey","Home","Component","constructor","socket","withinRegion","point","position","radius","google","window","to","maps","LatLng","lat","lng","distance","geometry","spherical","computeDistanceBetween","from","console","log","addAddress","address","setState","addresses","state","promptUser","data","goToParkingForm","props","history","push","create","title","content","buttons","left","text","action","close","right","confirmParkingSpot","addParkingSpot","spot","parkingSpots","goToMap","getParkingSpot","locationObject","spotsNum","key","parkingObject","fromAddress","then","response","results","location","parkingSpot","fromRentor","error","findParking","input","fromRentee","currentLocation","emit","api","connect","componentDidMount","on","distanceMatrix","DistanceMatrixService","prototype","getDistanceMatrix","origins","destinations","travelMode","unitSystem","UnitSystem","IMPERIAL","res","status","rows","elements","value","undefined","getSocket","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Home.css';\nimport SearchBar from \"./components/SearchBar\";\nimport Geocode from \"react-geocode\";\nimport io from 'socket.io-client';\nimport config from './config';\nimport Popup from 'react-popup';\nimport { withRouter } from 'react-router-dom';\n\n\nGeocode.setApiKey(\"AIzaSyDS7fqSLY5L2xuXAb8cIb1vyQRKt5EPXmw\");\n\nclass Home extends React.Component{\n  socket = {};\n\n  constructor(){\n    super()\n    this.state = {\n      addresses:[],\n      distance:\"\",\n      parkingSpots:[]\n    }\n    this.socket = io(config.api).connect()\n\n  }\n\n  componentDidMount(){\n    this.socket.on('server:message', (data)=>{\n      console.log(\"Server Message\",data);\n      let distanceMatrix = this.props.google.maps.DistanceMatrixService.prototype\n      distanceMatrix.getDistanceMatrix({\n    origins: [this.props.currentLocation],\n    destinations: [data.currentLocation],\n    travelMode: 'DRIVING',\n    unitSystem:this.props.google.maps.UnitSystem.IMPERIAL\n  },(res, status)=>{\n    if (status === \"OK\") {\n      this.setState({...this.state.addresses,distance:res.rows[0].elements[0].distance.value})\n      if (data.fromRentee && this.state.distance <= 8046.72) {\n        this.promptUser(data)\n      }else if(data.address !== undefined && data.fromRentor){\n        this.confirmParkingSpot(data)\n      }\n    } else {\n      console.error(\"status:\",status)\n    }\n  }\n  )\n    if (data.address !== undefined && data.fromRentor) {\n      this.confirmParkingSpot(data)\n    }\n\n    this.props.getSocket(this.socket)\n  })\n\n}\n\n\n  withinRegion = (point,position, radius) => {\n    const google = window.google\n        const to = new google.maps.LatLng(position.lat, position.lng);\n        const distance = google.maps.geometry.spherical.computeDistanceBetween;\n          const from = new google.maps.LatLng(point.lat, point.lng);\n          console.log(distance(from,to), radius)\n          return distance(from, to) <= radius;\n      }\n\n  addAddress =(address)=>{\n      this.setState({ addresses:[...this.state.addresses,address] })\n    }\n\n\n    promptUser = (data)=>{\n      let goToParkingForm = ()=>this.props.history.push('/parkingform')\n      Popup.create({\n      title: null,\n      content: `A User is requesting a Parking Spot at ${data.address}! Do you accept?`,\n      buttons: {\n          left: [{\n              text: '👎',\n              action: function () {\n                  Popup.close();\n              }\n          }],\n          right: [{\n              text: '👍',\n              action: function () {\n                Popup.close()\n                  // Passing true as the second argument to the create method\n                  // displays it directly, without interupting the queue.\n                  goToParkingForm()\n                  Popup.create({\n                      title: null,\n                      content: 'We are waiting for the Rentee to confirm!',\n                      buttons: {\n                          left: [{\n                            text:'👍',\n                            action:()=>{\n                              Popup.close()\n                            }\n\n                          }],\n                      }\n                  });\n              }\n          }]\n      }\n  });\n    }\n\n    confirmParkingSpot = (data)=>{\n      let  addParkingSpot = (spot)=> this.setState({...this.state,parkingSpots:[...this.state.parkingSpots,spot]})\n      let goToMap = ()=>this.props.history.push('/map')\n      let getParkingSpot = (locationObject)=>this.props.getParkingSpot(locationObject)\n      console.log(\"socket\",data);\n      Popup.create({\n      title: null,\n      content: `A Rentor has found ${data.spotsNum} at ${data.address}, is this ok?`,\n      buttons: {\n          left: [{\n              text: '👍',\n              action: function () {\n                  Popup.close();\n              }\n          }],\n          right: [{\n              text: `\\uD83D\\uDE00`,\n              key: 'ctrl+enter',\n              action: function () {\n                  // Passing true as the second argument to the create method\n                  // displays it directly, without interupting the queue.\n                  goToMap()\n                  let parkingObject = {}\n                  Geocode.fromAddress(data.address).then(\n                    response => {\n                      const {\n                        lat,\n                        lng\n                      } = response.results[0].geometry.location;\n                      getParkingSpot({lat, lng})\n                      parkingObject.parkingSpot = {lat, lng}\n                      parkingObject.fromRentor = true\n                      addParkingSpot(parkingObject)\n                    },\n                    error => {\n                      console.error(error);\n                    }\n                  );\n                  Popup.close()\n                  Popup.create({\n                      title: null,\n                      content: 'Here is your parking spot, start walking towards it!',\n                      buttons: {\n                          left: [{\n                            text:'👍',\n                            action: ()=>{\n                              Popup.close()\n                            }\n                          }]\n                      }\n                  });\n              }\n          }]\n      }\n  })\n    }\n\n  findParking = (input)=>{\n    Geocode.fromAddress(input).then(\n  response => {\n    const locationObject = response.results[0].geometry.location;\n    console.log(\"locationObject\",locationObject);\n    this.addAddress(locationObject)\n    locationObject.fromRentee = true;\n    locationObject.address = input\n    locationObject.currentLocation = this.props.currentLocation\n    this.socket.emit('client:message', locationObject)\n\n  },\n  error => {\n    console.error(error);\n  }\n);\n  }\nrender(){\n  console.log(this.state.parkingSpots)\n  return (\n      <div className=\"home-container\">\n      <header className='header'>\n            <div className=\"header__logo-box\">\n            </div>\n            <div className=\"header__text-box\">\n              <h1 className=\"heading-primary\">\n                <span className=\"heading-primary--main\">Open Spaces</span>\n                <span className=\"heading-primary--sub\">Find Parking</span>\n              </h1>\n              <SearchBar findParking={this.findParking}/>\n            </div>\n            <br/>\n            </header>\n      </div>\n    );\n  }\n\n}\n\nexport default withRouter(Home);\n"]},"metadata":{},"sourceType":"module"}