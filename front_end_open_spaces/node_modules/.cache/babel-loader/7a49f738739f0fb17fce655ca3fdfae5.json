{"ast":null,"code":"var _jsxFileName = \"/Users/irvingrabel/Documents/Projects/Open_Spaces/front_end_open_spaces/src/Home.js\";\nimport React from 'react';\nimport './Home.css';\nimport SearchBar from \"./components/SearchBar\";\nimport Geocode from \"react-geocode\";\nimport io from 'socket.io-client';\nimport config from './config';\nimport Popup from 'react-popup';\nimport { withRouter } from 'react-router-dom';\nGeocode.setApiKey(\"AIzaSyDS7fqSLY5L2xuXAb8cIb1vyQRKt5EPXmw\");\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n    this.socket = {};\n\n    this.addAddress = address => {\n      this.setState({\n        addresses: [...this.state.addresses, address]\n      });\n    };\n\n    this.promptUser = () => {\n      let goToParkingForm = () => this.props.history.push('/parkingform');\n\n      Popup.create({\n        title: null,\n        content: 'A User is requesting a Parking Spot! Do you accept?',\n        buttons: {\n          left: [{\n            text: 'Cancel',\n            className: 'danger',\n            action: function () {\n              Popup.alert('You pressed the Cancel btn');\n              /** Close this popup. Close will always close the current visible one, if one is visible */\n\n              Popup.close();\n            }\n          }],\n          right: [{\n            text: 'Post Parking Spot',\n            key: 'ctrl+enter',\n            action: function () {\n              // Passing true as the second argument to the create method\n              // displays it directly, without interupting the queue.\n              goToParkingForm();\n              Popup.create({\n                title: null,\n                content: 'We are waiting for the Rentee to confirm!',\n                buttons: {\n                  left: ['cancel'],\n                  right: []\n                }\n              }, true);\n            }\n          }, {\n            text: 'Save',\n            className: 'success',\n            action: function () {\n              Popup.alert('You pressed the Save btn');\n              /** Close this popup. Close will always close the current visible one, if one is visible */\n\n              Popup.close();\n            }\n          }]\n        }\n      });\n    };\n\n    this.confirmParkingSpot = address => {\n      let goToMap = () => this.props.history.push('/map');\n\n      let getParkingSpot = locationObject => this.props.getParkingSpot(locationObject);\n\n      Popup.create({\n        title: null,\n        content: \"A Rentor has accepted your request with a parking spot at this location: \".concat(address, \", is this ok?\"),\n        buttons: {\n          left: [{\n            text: 'Cancel',\n            className: 'danger',\n            action: function () {\n              Popup.alert('You pressed the Cancel btn');\n              /** Close this popup. Close will always close the current visible one, if one is visible */\n\n              Popup.close();\n            }\n          }],\n          right: [{\n            text: 'Yes!',\n            key: 'ctrl+enter',\n            action: function () {\n              // Passing true as the second argument to the create method\n              // displays it directly, without interupting the queue.\n              goToMap();\n              Geocode.fromAddress(address).then(response => {\n                const _response$results$0$g = response.results[0].geometry.location,\n                      lat = _response$results$0$g.lat,\n                      lng = _response$results$0$g.lng;\n                getParkingSpot({\n                  lat,\n                  lng\n                });\n              }, error => {\n                console.error(error);\n              });\n              Popup.create({\n                title: null,\n                content: 'Here is your parking spot!',\n                buttons: {\n                  left: ['cancel'],\n                  right: []\n                }\n              }, true);\n            }\n          }, {\n            text: 'Done',\n            className: 'success',\n            action: function () {\n              Popup.alert('Done');\n              /** Close this popup. Close will always close the current visible one, if one is visible */\n\n              Popup.close();\n            }\n          }]\n        }\n      });\n    };\n\n    this.findParking = input => {\n      console.log(\"findparkin\", this.socket);\n      Geocode.fromAddress(input).then(response => {\n        const locationObject = response.results[0].geometry.location;\n        console.log(\"locationObject\", locationObject);\n        this.addAddress(locationObject);\n        locationObject.fromRentee = true;\n        this.socket.emit('client:message', locationObject);\n      }, error => {\n        console.error(error);\n      });\n    };\n\n    this.state = {\n      addresses: []\n    };\n    this.socket = io(config.api).connect();\n    this.socket.on('server:message', data => {\n      console.log(\"server:message\", data);\n\n      if (data.fromRentee) {\n        this.promptUser();\n      } else if (data.address !== undefined && data.fromRentor) {\n        this.confirmParkingSpot(data.address);\n      }\n    }); // this.socket.on('server:message', (data)=>{\n    //   console.log(\"parking:message\",data)\n    // })\n  }\n\n  componentDidMount() {\n    this.props.getSocket(this.socket);\n  }\n\n  render() {\n    console.log(this.state.addresses);\n    return React.createElement(\"div\", {\n      className: \"home-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header__logo-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"header__text-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"heading-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"heading-primary--main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Open Spaces\"), React.createElement(\"span\", {\n      className: \"heading-primary--sub\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Find Parking\")), React.createElement(SearchBar, {\n      findParking: this.findParking,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })));\n  }\n\n} // <img src= {img} alt=\"Logo\" className=\"header__logo\"/>\n\n\nexport default withRouter(Home);","map":{"version":3,"sources":["/Users/irvingrabel/Documents/Projects/Open_Spaces/front_end_open_spaces/src/Home.js"],"names":["React","SearchBar","Geocode","io","config","Popup","withRouter","setApiKey","Home","Component","constructor","socket","addAddress","address","setState","addresses","state","promptUser","goToParkingForm","props","history","push","create","title","content","buttons","left","text","className","action","alert","close","right","key","confirmParkingSpot","goToMap","getParkingSpot","locationObject","fromAddress","then","response","results","geometry","location","lat","lng","error","console","findParking","input","log","fromRentee","emit","api","connect","on","data","undefined","fromRentor","componentDidMount","getSocket","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Home.css';\nimport SearchBar from \"./components/SearchBar\";\nimport Geocode from \"react-geocode\";\nimport io from 'socket.io-client';\nimport config from './config';\nimport Popup from 'react-popup';\nimport { withRouter } from 'react-router-dom'\n\nGeocode.setApiKey(\"AIzaSyDS7fqSLY5L2xuXAb8cIb1vyQRKt5EPXmw\");\n\nclass Home extends React.Component{\n  socket = {};\n\n  constructor(){\n    super()\n    this.state = {\n      addresses:[],\n    }\n    this.socket = io(config.api).connect()\n    this.socket.on('server:message', (data)=>{\n      console.log(\"server:message\",data)\n      if (data.fromRentee) {\n        this.promptUser()\n      }else if(data.address !== undefined && data.fromRentor){\n        this.confirmParkingSpot(data.address)\n      }\n    })\n    // this.socket.on('server:message', (data)=>{\n    //   console.log(\"parking:message\",data)\n    // })\n  }\n\n  componentDidMount(){\n    this.props.getSocket(this.socket)\n  }\n\n\n\n\n  addAddress =(address)=>{\n      this.setState({ addresses:[...this.state.addresses,address] })\n    }\n\n    promptUser = ()=>{\n      let goToParkingForm = ()=>this.props.history.push('/parkingform')\n      Popup.create({\n      title: null,\n      content: 'A User is requesting a Parking Spot! Do you accept?',\n      buttons: {\n          left: [{\n              text: 'Cancel',\n              className: 'danger',\n              action: function () {\n                  Popup.alert('You pressed the Cancel btn');\n\n                  /** Close this popup. Close will always close the current visible one, if one is visible */\n                  Popup.close();\n              }\n          }],\n          right: [{\n              text: 'Post Parking Spot',\n              key: 'ctrl+enter',\n              action: function () {\n                  // Passing true as the second argument to the create method\n                  // displays it directly, without interupting the queue.\n                  goToParkingForm()\n                  Popup.create({\n                      title: null,\n                      content: 'We are waiting for the Rentee to confirm!',\n                      buttons: {\n                          left: ['cancel'],\n                          right: []\n                      }\n                  }, true);\n              }\n          }, {\n              text: 'Save',\n              className: 'success',\n              action: function () {\n                  Popup.alert('You pressed the Save btn');\n\n                  /** Close this popup. Close will always close the current visible one, if one is visible */\n                  Popup.close();\n              }\n          }]\n      }\n  });\n    }\n\n    confirmParkingSpot = (address)=>{\n      let goToMap = ()=>this.props.history.push('/map')\n      let getParkingSpot = (locationObject)=>this.props.getParkingSpot(locationObject)\n      Popup.create({\n      title: null,\n      content: `A Rentor has accepted your request with a parking spot at this location: ${address}, is this ok?`,\n      buttons: {\n          left: [{\n              text: 'Cancel',\n              className: 'danger',\n              action: function () {\n                  Popup.alert('You pressed the Cancel btn');\n\n                  /** Close this popup. Close will always close the current visible one, if one is visible */\n                  Popup.close();\n              }\n          }],\n          right: [{\n              text: 'Yes!',\n              key: 'ctrl+enter',\n              action: function () {\n                  // Passing true as the second argument to the create method\n                  // displays it directly, without interupting the queue.\n                  goToMap()\n                  Geocode.fromAddress(address).then(\n                    response => {\n                      const {\n                        lat,\n                        lng\n                      } = response.results[0].geometry.location;\n                      getParkingSpot({lat, lng})\n                    },\n                    error => {\n                      console.error(error);\n                    }\n                  );\n\n                  Popup.create({\n                      title: null,\n                      content: 'Here is your parking spot!',\n                      buttons: {\n                          left: ['cancel'],\n                          right: []\n                      }\n                  }, true);\n              }\n          }, {\n              text: 'Done',\n              className: 'success',\n              action: function () {\n                  Popup.alert('Done');\n\n                  /** Close this popup. Close will always close the current visible one, if one is visible */\n                  Popup.close();\n              }\n          }]\n      }\n  })\n    }\n\n  findParking = (input)=>{\n    console.log(\"findparkin\",this.socket)\n    Geocode.fromAddress(input).then(\n  response => {\n    const locationObject = response.results[0].geometry.location;\n    console.log(\"locationObject\",locationObject);\n    this.addAddress(locationObject)\n    locationObject.fromRentee = true;\n    this.socket.emit('client:message', locationObject)\n\n  },\n  error => {\n    console.error(error);\n  }\n);\n  }\nrender(){\n  console.log(this.state.addresses);\n  return (\n      <div className=\"home-container\">\n      <header className='header'>\n            <div className=\"header__logo-box\">\n            </div>\n            <div className=\"header__text-box\">\n              <h1 className=\"heading-primary\">\n                <span className=\"heading-primary--main\">Open Spaces</span>\n                <span className=\"heading-primary--sub\">Find Parking</span>\n              </h1>\n              <SearchBar findParking={this.findParking}/>\n            </div>\n            <br/>\n            </header>\n      </div>\n    );\n  }\n\n}\n// <img src= {img} alt=\"Logo\" className=\"header__logo\"/>\n\n\nexport default withRouter(Home);\n"]},"metadata":{},"sourceType":"module"}