{"ast":null,"code":"import _objectSpread from \"/Users/flatironschool/Desktop/flat iron /Module_6/Open_Spaces/front_end_open_spaces/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/flatironschool/Desktop/flat iron /Module_6/Open_Spaces/front_end_open_spaces/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/flatironschool/Desktop/flat iron /Module_6/Open_Spaces/front_end_open_spaces/src/components/ParkingForm.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Geocode from \"react-geocode\";\nGeocode.setApiKey(\"AIzaSyDS7fqSLY5L2xuXAb8cIb1vyQRKt5EPXmw\");\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 345\n  },\n  media: {\n    height: 140\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  }\n}));\nexport default function ParkingForm(props) {\n  const classes = useStyles();\n\n  const _React$useState = React.useState({\n    address: ''\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        values = _React$useState2[0],\n        setValues = _React$useState2[1];\n\n  const handleChange = address => event => {\n    setValues(_objectSpread({}, values, {\n      [address]: event.target.value\n    }));\n  };\n\n  const handleSubmit = address => {\n    Geocode.fromAddress(address).then(response => {\n      const _response$results$0$g = response.results[0].geometry.location,\n            lat = _response$results$0$g.lat,\n            lng = _response$results$0$g.lng;\n      props.getParkingSpot({\n        lat,\n        lng\n      });\n    }, error => {\n      console.error(error);\n    });\n  };\n\n  return React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(CardActionArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(CardMedia, {\n    className: classes.media,\n    image: \"../assets/parking_form_pic.jpeg\",\n    title: \"Contemplative Reptile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"outlined-name\",\n    label: \"Address\",\n    className: classes.textField,\n    value: values.address,\n    onChange: handleChange('address'),\n    margin: \"normal\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })))), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => handleSubmit(values.address),\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Find Parking!\")));\n}","map":{"version":3,"sources":["/Users/flatironschool/Desktop/flat iron /Module_6/Open_Spaces/front_end_open_spaces/src/components/ParkingForm.js"],"names":["React","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","TextField","Geocode","setApiKey","useStyles","theme","card","maxWidth","media","height","textField","marginLeft","spacing","marginRight","ParkingForm","props","classes","useState","address","values","setValues","handleChange","event","target","value","handleSubmit","fromAddress","then","response","results","geometry","location","lat","lng","getParkingSpot","error","console"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  makeStyles\n} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Geocode from \"react-geocode\";\n\nGeocode.setApiKey(\"AIzaSyDS7fqSLY5L2xuXAb8cIb1vyQRKt5EPXmw\");\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n}));\n\nexport default function ParkingForm(props) {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    address: '',\n  });\n\n  const handleChange = address => event => {\n    setValues({ ...values,\n      [address]: event.target.value\n    });\n  };\n\n  const handleSubmit = (address)=>{\n    Geocode.fromAddress(address).then(\n      response => {\n        const {\n          lat,\n          lng\n        } = response.results[0].geometry.location;\n       props.getParkingSpot({lat, lng});\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  }\n\n\n\n  return (\n    <Card className = {classes.card}>\n      <CardActionArea >\n        <CardMedia className = {classes.media} image = \"../assets/parking_form_pic.jpeg\" title = \"Contemplative Reptile\" />\n          <CardContent >\n            <form>\n              <TextField id = \"outlined-name\"label = \"Address\"className = {classes.textField}\n              value = {values.address} onChange = {handleChange('address')} margin = \"normal\"variant = \"outlined\" />\n            </form>\n          </CardContent>\n      </CardActionArea>\n      <CardActions >\n        <Button onClick={()=>handleSubmit(values.address)}size = \"small\" color = \"primary\" >Find Parking!</Button>\n      </CardActions>\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}