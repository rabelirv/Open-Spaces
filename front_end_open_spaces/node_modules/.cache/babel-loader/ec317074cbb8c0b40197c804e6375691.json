{"ast":null,"code":"import _objectSpread from \"/Users/irvingrabel/Documents/Projects/Open_Spaces/front_end_open_spaces/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/irvingrabel/Documents/Projects/Open_Spaces/front_end_open_spaces/src/App.js\";\nimport React from 'react';\nimport Home from './Home';\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport SignUp from './components/SignUp';\nimport Profile from './components/Profile';\nimport MapView from './components/MapView';\nimport ParkingForm from './components/ParkingForm';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Popup from 'react-popup';\nimport HttpsRedirect from 'react-https-redirect';\nimport { GoogleApiWrapper } from 'google-maps-react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getLocation = () => {\n      if (\"geolocation\" in navigator) {\n        navigator.geolocation.watchPosition(position => {\n          let location = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          };\n          this.setState((prevState, props) => {\n            let newState = _objectSpread({}, prevState);\n\n            newState.currentLocation = location;\n            newState.locations[\"\".concat(prevState.current_user)] = location;\n            return newState;\n          });\n          axios.post(\"https://open-spaces-locationserver.herokuapp.com/update-location\", {\n            username: this.state.current_user,\n            location: location\n          }).then(res => {\n            if (res.status === 200) {\n              console.log(\"new location updated successfully\");\n            }\n          });\n        });\n      } else {\n        alert(\"Sorry, gelocation is not avilable on this device. You need that to use this app.\");\n      }\n    };\n\n    this.notify = () => toast(\"Users online : \".concat(Object.keys(this.state.users_online).length), {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      type: 'info'\n    });\n\n    this.getParkingSpot = spot => {\n      this.setState({\n        parkingSpots: [...this.state.parkingSpots, spot]\n      });\n    };\n\n    this.getSocket = socket => {\n      this.setState({\n        socket: socket\n      });\n    };\n\n    this.grabRecenter = func => {\n      this.setState({\n        recenterMap: func\n      });\n    };\n\n    this.logOut = () => {\n      if (localStorage.getItem('token')) {\n        localStorage.removeItem('token');\n        this.setState({\n          user: null\n        });\n      } else {\n        return null;\n      }\n    };\n\n    this.createNewUser = user => {\n      fetch('https://open-spaces-api.herokuapp.com/api/v1/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        },\n        body: JSON.stringify({\n          user\n        })\n      }).then(res => res.json()).then(res => {\n        localStorage.setItem(\"token\", res.jwt);\n        this.setState({\n          user: res.user\n        });\n        this.getProfile(res.jwt);\n      }).then(res => React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      })).catch(err => console.log(err));\n    };\n\n    this.logIn = user => {\n      fetch('https://open-spaces-api.herokuapp.com/api/v1/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        },\n        body: JSON.stringify({\n          user\n        })\n      }).then(res => res.json()).then(res => {\n        localStorage.setItem(\"token\", res.jwt);\n        this.setState({\n          user: res.user\n        });\n        this.getProfile(res.jwt);\n      }).catch(err => console.log(err));\n    };\n\n    this.getProfile = token => {\n      fetch('https://open-spaces-api.herokuapp.com/api/v1/profile', {\n        method: 'GET',\n        headers: {\n          Authorization: \"Bearer \".concat(token)\n        }\n      }).then(res => res.json()).then(res => this.setState({\n        user: res.user\n      }));\n    };\n\n    this.state = {\n      user: null,\n      parkingSpots: [],\n      currentLocation: {\n        lat: 40.73,\n        lng: -73.93\n      },\n      locations: {},\n      users_online: [],\n      current_user: '',\n      isRentor: false,\n      socket: {},\n      recenterMap: null,\n      radius: 365.7600\n    };\n  }\n\n  componentDidMount() {\n    let pusher = new Pusher(\"79c071887a3fc9980665\", {\n      authEndpoint: \"https://open-spaces-locationserver.herokuapp.com/pusher/auth\",\n      cluster: \"us2\"\n    });\n    this.presenceChannel = pusher.subscribe('presence-channel');\n    this.presenceChannel.bind('pusher:subscription_succeeded', members => {\n      this.setState({\n        users_online: members.members,\n        current_user: members.myID\n      });\n      this.getLocation();\n      this.notify();\n    });\n    this.presenceChannel.bind('location-update', body => {\n      this.setState((prevState, props) => {\n        const newState = _objectSpread({}, prevState);\n\n        newState.locations[\"\".concat(body.username)] = body.location;\n        return newState;\n      });\n    });\n    this.presenceChannel.bind('pusher:member_removed', member => {\n      this.setState((prevState, props) => {\n        const newState = _objectSpread({}, prevState); // remove member location once they go offline\n\n\n        delete newState.locations[\"\".concat(member.id)]; // delete member from the list of online users\n\n        delete newState.users_online[\"\".concat(member.id)];\n        return newState;\n      });\n      this.notify();\n    });\n    this.presenceChannel.bind('pusher:member_added', member => {\n      this.notify();\n    });\n  }\n\n  render() {\n    console.log(\"Current  location\", this.state.currentLocation);\n    return React.createElement(\"div\", {\n      className: \"app-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(HttpsRedirect, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      user: this.state.user,\n      logOut: this.logOut,\n      recenterMap: this.state.recenterMap,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(ToastContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(Popup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: \"exact\",\n      path: \"/\",\n      render: () => React.createElement(Home, {\n        google: this.props.google,\n        getParkingSpot: this.getParkingSpot,\n        radius: this.props.radius,\n        currentLocation: this.state.currentLocation,\n        isRentor: this.state.isRentor,\n        getSocket: this.getSocket,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: \"exact\",\n      path: \"/parkingform\",\n      render: () => React.createElement(ParkingForm, {\n        getParkingSpot: this.getParkingSpot,\n        socket: this.state.socket,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: \"exact\",\n      path: \"/map\",\n      render: () => React.createElement(MapView, {\n        grabRecenter: this.grabRecenter,\n        parkingSpots: this.state.parkingSpots,\n        radius: this.state.radius,\n        center: this.state.currentLocation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: \"exact\",\n      path: \"/signup\",\n      render: () => React.createElement(SignUp, {\n        createNewUser: this.createNewUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: \"exact\",\n      path: \"/profile\",\n      render: () => React.createElement(Profile, {\n        user: this.state.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDS7fqSLY5L2xuXAb8cIb1vyQRKt5EPXmw\"\n})(App);","map":{"version":3,"sources":["/Users/irvingrabel/Documents/Projects/Open_Spaces/front_end_open_spaces/src/App.js"],"names":["React","Home","NavBar","SignUp","Profile","MapView","ParkingForm","Switch","Route","Redirect","Popup","HttpsRedirect","GoogleApiWrapper","axios","Pusher","ToastContainer","toast","App","Component","constructor","getLocation","navigator","geolocation","watchPosition","position","location","lat","coords","latitude","lng","longitude","setState","prevState","props","newState","currentLocation","locations","current_user","post","username","state","then","res","status","console","log","alert","notify","Object","keys","users_online","length","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","type","getParkingSpot","spot","parkingSpots","getSocket","socket","grabRecenter","func","recenterMap","logOut","localStorage","getItem","removeItem","user","createNewUser","fetch","method","headers","Accept","body","JSON","stringify","json","setItem","jwt","getProfile","catch","err","logIn","token","Authorization","isRentor","radius","componentDidMount","pusher","authEndpoint","cluster","presenceChannel","subscribe","bind","members","myID","member","id","render","google","apiKey"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Home from './Home'\nimport './App.css';\nimport NavBar from './components/NavBar'\nimport SignUp from './components/SignUp'\nimport Profile from './components/Profile'\nimport MapView from './components/MapView'\nimport ParkingForm from './components/ParkingForm'\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport Popup from 'react-popup';\nimport HttpsRedirect from 'react-https-redirect';\nimport {GoogleApiWrapper} from 'google-maps-react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass App extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n      user: null,\n      parkingSpots: [],\n      currentLocation:{lat:40.73,lng:-73.93},\n      locations:{},\n      users_online:[],\n      current_user:'',\n      isRentor: false,\n      socket: {},\n      recenterMap: null,\n      radius: 365.7600\n    }\n  }\n\n  componentDidMount(){\n    let pusher = new Pusher(\"79c071887a3fc9980665\", {\n      authEndpoint: \"https://open-spaces-locationserver.herokuapp.com/pusher/auth\",\n      cluster:\"us2\"\n    })\n    this.presenceChannel = pusher.subscribe('presence-channel');\n    this.presenceChannel.bind('pusher:subscription_succeeded', members=>{\n      this.setState({\n        users_online:members.members,\n        current_user:members.myID\n      });\n      this.getLocation();\n      this.notify();\n    })\n\n    this.presenceChannel.bind('location-update', body =>{\n      this.setState((prevState, props)=>{\n        const newState = {...prevState}\n        newState.locations[`${body.username}`] = body.location;\n        return newState\n      });\n    });\n\n    this.presenceChannel.bind('pusher:member_removed', member =>{\n      this.setState((prevState, props) =>{\n        const newState = {...prevState};\n        // remove member location once they go offline\n        delete newState.locations[`${member.id}`];\n        // delete member from the list of online users\n        delete newState.users_online[`${member.id}`];\n        return newState;\n      })\n      this.notify()\n    })\n\n    this.presenceChannel.bind('pusher:member_added', member =>{\n      this.notify()\n    })\n  }\n\n  getLocation = ()=>{\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.watchPosition(position =>{\n        let location = {lat: position.coords.latitude, lng: position.coords.longitude};\n        this.setState((prevState,props)=>{\n          let newState = {...prevState};\n          newState.currentLocation = location;\n          newState.locations[`${prevState.current_user}`] = location;\n          return newState\n        });\n        axios.post(\"https://open-spaces-locationserver.herokuapp.com/update-location\",{\n          username:this.state.current_user,\n          location: location\n        }).then(res =>{\n          if (res.status === 200) {\n            console.log(\"new location updated successfully\");\n          }\n        });\n      })\n    }else {\n      alert(\"Sorry, gelocation is not avilable on this device. You need that to use this app.\")\n    }\n  }\n  notify = () => toast(`Users online : ${Object.keys(this.state.users_online).length}`,{\n    position: \"top-right\",\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    type: 'info'\n  })\n\n\n  getParkingSpot = (spot) =>{\n    this.setState({\n      parkingSpots:[...this.state.parkingSpots, spot]})\n  }\n\n  getSocket = (socket)=>{\n    this.setState({socket: socket})\n  }\n  grabRecenter = (func)=>{\n    this.setState({\n      recenterMap: func\n    })\n  }\n\n  logOut = () => {\n    if (localStorage.getItem('token')) {\n      localStorage.removeItem('token')\n      this.setState({user: null})\n    } else {\n      return null\n    }\n  }\n\n  createNewUser = (user) => {\n    fetch('https://open-spaces-api.herokuapp.com/api/v1/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({user})\n    }).then(res => res.json()).then(res => {\n      localStorage.setItem(\"token\", res.jwt)\n      this.setState({user: res.user})\n      this.getProfile(res.jwt)\n    }).then(res => <Redirect to=\"/\"/>).catch(err => console.log(err))\n  }\n\n  logIn = (user) => {\n    fetch('https://open-spaces-api.herokuapp.com/api/v1/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({user})\n    }).then(res => res.json()).then(res => {\n      localStorage.setItem(\"token\", res.jwt)\n      this.setState({user: res.user})\n      this.getProfile(res.jwt)\n    }).catch(err => console.log(err))\n\n  }\n\n  getProfile = (token) => {\n    fetch('https://open-spaces-api.herokuapp.com/api/v1/profile', {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(res => this.setState({user: res.user}))\n  }\n\n  render() {\n    console.log(\"Current  location\", this.state.currentLocation);\n    return (<div className=\"app-container\">\n    <HttpsRedirect>\n      <NavBar user={this.state.user} logOut={this.logOut} recenterMap={this.state.recenterMap}/>\n      <ToastContainer/>\n      <Popup />\n      <Switch>\n        <Route exact=\"exact\" path='/' render={() => <Home google={this.props.google}getParkingSpot={this.getParkingSpot} radius={this.props.radius}currentLocation={this.state.currentLocation}isRentor={this.state.isRentor} getSocket={this.getSocket}/>}/>\n        <Route exact=\"exact\" path='/parkingform' render={() => <ParkingForm getParkingSpot={this.getParkingSpot} socket={this.state.socket}/>}/>\n        <Route exact=\"exact\" path='/map' render={() => <MapView grabRecenter={this.grabRecenter}parkingSpots={this.state.parkingSpots} radius={this.state.radius}center={this.state.currentLocation} />}/>\n        <Route exact=\"exact\" path='/signup' render={() =>< SignUp createNewUser = {\n            this.createNewUser\n          } />}/>\n        <Route exact=\"exact\" path='/profile' render={() =>< Profile user = {\n            this.state.user\n          } />}/>\n      </Switch>\n      </HttpsRedirect>\n    </div>);\n  }\n\n}\n\nexport default GoogleApiWrapper({apiKey: \"AIzaSyDS7fqSLY5L2xuXAb8cIb1vyQRKt5EPXmw\"})(App);\n"]},"metadata":{},"sourceType":"module"}