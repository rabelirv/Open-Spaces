{"ast":null,"code":"var _jsxFileName = \"/Users/irvingrabel/Documents/Projects/Open_Spaces/front_end_open_spaces/src/App.js\";\nimport React from 'react';\nimport Home from './Home';\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport SignUp from './components/SignUp';\nimport Profile from './components/Profile';\nimport MapView from './components/MapView';\nimport ParkingForm from './components/ParkingForm';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: null,\n      parkingSpots: [],\n      currentLocation: {\n        lat: 40.73,\n        lng: -73.93\n      },\n      isRentor: false\n    };\n\n    this.getParkingSpot = spot => {\n      console.log(\"Parking Spot\", spot);\n      this.setState({\n        parkingSpots: [...this.state.parkingSpots, spot]\n      });\n    };\n\n    this.logOut = () => {\n      if (localStorage.getItem('token')) {\n        localStorage.removeItem('token');\n        this.setState({\n          user: null\n        });\n      } else {\n        return null;\n      }\n    };\n\n    this.createNewUser = user => {\n      fetch('http://localhost:3000/api/v1/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        },\n        body: JSON.stringify({\n          user\n        })\n      }).then(res => res.json()).then(res => {\n        localStorage.setItem(\"token\", res.jwt);\n        this.setState({\n          user: res.user\n        });\n        this.getProfile(res.jwt);\n      }).then(res => React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })).catch(err => console.log(err));\n    };\n\n    this.logIn = user => {\n      fetch('http://localhost:3000/api/v1/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        },\n        body: JSON.stringify({\n          user\n        })\n      }).then(res => res.json()).then(res => {\n        localStorage.setItem(\"token\", res.jwt);\n        this.setState({\n          user: res.user\n        });\n        this.getProfile(res.jwt);\n      }).catch(err => console.log(err));\n    };\n\n    this.getProfile = token => {\n      fetch('http://localhost:3000/api/v1/profile', {\n        method: 'GET',\n        headers: {\n          Authorization: \"Bearer \".concat(token)\n        }\n      }).then(res => res.json()).then(res => this.setState({\n        user: res.user\n      }));\n    };\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition(position => console.log(\"location\", position.coords.latitude, position.coords.longitude));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"app-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      user: this.state.user,\n      logOut: this.logOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: \"exact\",\n      path: \"/\",\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: \"exact\",\n      path: \"/parkingform\",\n      render: () => React.createElement(ParkingForm, {\n        getParkingSpot: this.getParkingSpot,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: \"exact\",\n      path: \"/map\",\n      render: () => React.createElement(MapView, {\n        parkingSpots: this.state.parkingSpots,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: \"exact\",\n      path: \"/signup\",\n      render: () => React.createElement(SignUp, {\n        createNewUser: this.createNewUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: \"exact\",\n      path: \"/profile\",\n      render: () => React.createElement(Profile, {\n        user: this.state.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/irvingrabel/Documents/Projects/Open_Spaces/front_end_open_spaces/src/App.js"],"names":["React","Home","NavBar","SignUp","Profile","MapView","ParkingForm","Switch","Route","Redirect","App","Component","state","user","parkingSpots","currentLocation","lat","lng","isRentor","getParkingSpot","spot","console","log","setState","logOut","localStorage","getItem","removeItem","createNewUser","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","setItem","jwt","getProfile","catch","err","logIn","token","Authorization","componentDidMount","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Home from './Home'\nimport './App.css';\nimport NavBar from './components/NavBar'\nimport SignUp from './components/SignUp'\nimport Profile from './components/Profile'\nimport MapView from './components/MapView'\nimport ParkingForm from './components/ParkingForm'\nimport {Switch, Route, Redirect} from 'react-router-dom'\n\nclass App extends React.Component {\n  state = {\n    user: null,\n    parkingSpots: [],\n    currentLocation:{lat:40.73,lng:-73.93},\n    isRentor: false\n  }\n\n  componentDidMount(){\n      navigator.geolocation.getCurrentPosition(position=> console.log(\"location\",position.coords.latitude,position.coords.longitude))\n  }\n\n  getParkingSpot = (spot) =>{\n    console.log(\"Parking Spot\", spot)\n    this.setState({\n      parkingSpots:[...this.state.parkingSpots, spot]})\n  }\n\n  logOut = () => {\n    if (localStorage.getItem('token')) {\n      localStorage.removeItem('token')\n      this.setState({user: null})\n    } else {\n      return null\n    }\n  }\n\n  createNewUser = (user) => {\n    fetch('http://localhost:3000/api/v1/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({user})\n    }).then(res => res.json()).then(res => {\n      localStorage.setItem(\"token\", res.jwt)\n      this.setState({user: res.user})\n      this.getProfile(res.jwt)\n    }).then(res => <Redirect to=\"/\"/>).catch(err => console.log(err))\n  }\n\n  logIn = (user) => {\n    fetch('http://localhost:3000/api/v1/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify({user})\n    }).then(res => res.json()).then(res => {\n      localStorage.setItem(\"token\", res.jwt)\n      this.setState({user: res.user})\n      this.getProfile(res.jwt)\n    }).catch(err => console.log(err))\n\n  }\n\n  getProfile = (token) => {\n    fetch('http://localhost:3000/api/v1/profile', {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(res => this.setState({user: res.user}))\n  }\n\n  render() {\n    return (<div className=\"app-container\">\n      <NavBar user={this.state.user} logOut={this.logOut}/>\n      <Switch>\n        <Route exact=\"exact\" path='/' component={Home}/>\n        <Route exact=\"exact\" path='/parkingform' render={() => <ParkingForm getParkingSpot={this.getParkingSpot}/>}/>\n        <Route exact=\"exact\" path='/map' render={() => <MapView parkingSpots={this.state.parkingSpots} />}/>\n        <Route exact=\"exact\" path='/signup' render={() =>< SignUp createNewUser = {\n            this.createNewUser\n          } />}/>\n        <Route exact=\"exact\" path='/profile' render={() =>< Profile user = {\n            this.state.user\n          } />}/>\n      </Switch>\n\n    </div>);\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}