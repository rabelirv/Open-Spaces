{"ast":null,"code":"var _jsxFileName = \"/Users/irvingrabel/Documents/Projects/Open_Spaces/front_end_open_spaces/src/components/MapView.js\";\nimport React from 'react';\nimport { GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\nimport CurrentLocation from './CurrentLocation';\nimport CurrentPerson from './CurrentPerson';\nimport Popup from 'react-popup';\n\nclass MapView extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showingInfoWindow: {},\n      activeMarker: {},\n      selectedPlace: {}\n    };\n\n    this.withinRegion = (point, position, radius) => {\n      const google = window.google;\n      const to = new google.maps.LatLng(position.lat, position.lng);\n      const distance = google.maps.geometry.spherical.computeDistanceBetween;\n      const from = new google.maps.LatLng(point.lat, point.lng);\n      console.log(distance(from, to), radius);\n      return distance(from, to) <= radius;\n    };\n\n    this.onMarkerClick = (props, marker, e) => {\n      this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n    };\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.alertUser = () => {\n      console.log(\"hit alertUSer!\");\n      Popup.create({\n        title: \"All Done!\",\n        content: \"You've arrived at your parking spot!\",\n        buttons: {\n          left: [{\n            text: \"👍\",\n            action: () => {\n              Popup.close();\n            }\n          }]\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.parkingSpots.length >= 1) {\n      const within = this.withinRegion(this.props.parkingSpots[0], this.props.center, this.props.radius);\n      console.log(\"within\", within);\n\n      if (within) {\n        this.alertUser();\n      }\n    }\n  }\n\n  render() {\n    let parkingSpots = this.props.parkingSpots.map(spot => React.createElement(Marker, {\n      name: 'Kenyatta International Convention Centre',\n      onClick: this.onMarkerClick,\n      position: {\n        lat: spot.lat,\n        lng: spot.lng\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }));\n    return React.createElement(CurrentLocation, {\n      center: this.props.center,\n      grabRecenter: this.props.grabRecenter,\n      centerAroundCurrentLocation: true,\n      google: this.props.google,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      name: 'You Are Here',\n      onClick: this.onMarkerClick,\n      position: this.props.center,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), parkingSpots, React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.state.selectedPlace.name))));\n  }\n\n}\n\nMapView.defaultProps = {\n  zoom: 14\n};\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDS7fqSLY5L2xuXAb8cIb1vyQRKt5EPXmw\"\n})(MapView);","map":{"version":3,"sources":["/Users/irvingrabel/Documents/Projects/Open_Spaces/front_end_open_spaces/src/components/MapView.js"],"names":["React","GoogleApiWrapper","Marker","InfoWindow","CurrentLocation","CurrentPerson","Popup","MapView","Component","state","showingInfoWindow","activeMarker","selectedPlace","withinRegion","point","position","radius","google","window","to","maps","LatLng","lat","lng","distance","geometry","spherical","computeDistanceBetween","from","console","log","onMarkerClick","props","marker","e","setState","onClose","alertUser","create","title","content","buttons","left","text","action","close","componentDidMount","parkingSpots","length","within","center","render","map","spot","grabRecenter","name","defaultProps","zoom","apiKey"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {GoogleApiWrapper, Marker, InfoWindow} from 'google-maps-react';\nimport CurrentLocation from './CurrentLocation';\nimport CurrentPerson from './CurrentPerson';\nimport Popup from 'react-popup';\n\nclass MapView extends React.Component {\n  state = {\n    showingInfoWindow: {},\n    activeMarker: {},\n    selectedPlace: {}\n  }\n  static defaultProps = {\n    zoom: 14\n  }\n\n  componentDidMount(){\n    if(this.props.parkingSpots.length>=1){\n      const within = this.withinRegion(this.props.parkingSpots[0],this.props.center,this.props.radius)\n      console.log(\"within\",within);\n      if (within) {\n        this.alertUser()\n      }\n    }\n  }\n\n  withinRegion = (point,position, radius) => {\n    const google = window.google\n        const to = new google.maps.LatLng(position.lat, position.lng);\n        const distance = google.maps.geometry.spherical.computeDistanceBetween;\n          const from = new google.maps.LatLng(point.lat, point.lng);\n          console.log(distance(from,to), radius)\n          return distance(from, to) <= radius;\n      }\n\n  onMarkerClick =(props, marker, e)=>{\n    this.setState({\n      selectedPlace:props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    })\n  }\n\n  onClose = (props)=>{\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker:null\n      })\n    }\n  }\n\n  alertUser = ()=>{\n    console.log(\"hit alertUSer!\");\n    Popup.create({\n      title:\"All Done!\",\n      content: \"You've arrived at your parking spot!\",\n      buttons:{\n        left:[{\n          text:\"👍\",\n          action:()=>{\n            Popup.close()\n          }\n        }]\n\n      }\n    })\n  }\n\n\n  render(){\n    let parkingSpots= this.props.parkingSpots.map(spot=> <Marker name={'Kenyatta International Convention Centre'} onClick={this.onMarkerClick}position={{lat:spot.lat, lng:spot.lng}}/>)\n    return(\n        <CurrentLocation\n        center = {this.props.center}\n        grabRecenter={this.props.grabRecenter}\n          centerAroundCurrentLocation\n          google={this.props.google}\n        >\n\n          <Marker name={'You Are Here'} onClick={this.onMarkerClick} position={this.props.center}/>\n          {parkingSpots}\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}\n            onClose={this.onClose}\n          >\n            <div>\n              <h4>{this.state.selectedPlace.name}</h4>\n            </div>\n          </InfoWindow>\n        </CurrentLocation>\n    )\n  }\n}\n\nexport default GoogleApiWrapper({apiKey: \"AIzaSyDS7fqSLY5L2xuXAb8cIb1vyQRKt5EPXmw\"}) (MapView)\n"]},"metadata":{},"sourceType":"module"}