{"ast":null,"code":"import _objectSpread from \"/Users/irvingrabel/Documents/Projects/Open_Spaces/front_end_open_spaces/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/irvingrabel/Documents/Projects/Open_Spaces/front_end_open_spaces/src/components/ParkingForm.js\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Geocode from \"react-geocode\";\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nGeocode.setApiKey(\"AIzaSyDS7fqSLY5L2xuXAb8cIb1vyQRKt5EPXmw\");\n\nconst styles = theme => ({\n  card: {\n    maxWidth: 345\n  },\n  media: {\n    height: 140\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  }\n});\n\nclass ParkingForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      address: '',\n      spotsNum: ''\n    };\n\n    this.handleChange = event => {\n      setValues(_objectSpread({}, values, {\n        [event.target.name]: event.target.value\n      }));\n    };\n\n    this.handleScriptLoad = () => {\n      // Initialize Google Autocomplete\n\n      /*global google*/\n      this.autocomplete = new google.maps.places.Autocomplete(document.getElementById(\"autocomplete\")); // Avoid paying for data that you don't need by restricting the\n      // set of place fields that are returned to just the address\n      // components and formatted address\n\n      this.autocomplete.setFields(['address_components', 'formatted_address']); // Fire Event when a suggested name is selected\n\n      this.autocomplete.addListener(\"place_changed\", this.handlePlaceSelect);\n    };\n\n    this.handleSubmit = (address, spotsNum) => {\n      console.log(\"spotsNum\", spotsNum);\n      let addressObject = {\n        address: address,\n        spotsNum: spotsNum,\n        fromRentor: true\n      };\n      props.socket.emit('client:message', addressObject);\n    };\n\n    this.getCurrentLocation = () => {\n      navigator.geolocation.getCurrentPosition(position => console.log(position));\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(Card, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Script, {\n      url: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyDS7fqSLY5L2xuXAb8cIb1vyQRKt5EPXmw&libraries=places\",\n      onLoad: this.handleScriptLoad,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(CardActionArea, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(CardMedia, {\n      className: classes.media,\n      image: \"../assets/parking_form_pic.jpeg\",\n      title: \"Contemplative Reptile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      name: \"address\",\n      id: \"outlined-name\",\n      label: \"Address\",\n      className: classes.textField,\n      value: values.address,\n      onChange: this.handleChange,\n      margin: \"normal\",\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Select, {\n      value: values.spotsNum,\n      onChange: this.handleChange,\n      inputProps: {\n        name: 'spotsNum',\n        id: 'age-simple'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"NONE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"None\")), React.createElement(MenuItem, {\n      value: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"1\"), React.createElement(MenuItem, {\n      value: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"2\"), React.createElement(MenuItem, {\n      value: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"3\"), React.createElement(MenuItem, {\n      value: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"4\"), React.createElement(MenuItem, {\n      value: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"5\"), React.createElement(MenuItem, {\n      value: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"6\"), React.createElement(MenuItem, {\n      value: 7,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"7\"), React.createElement(MenuItem, {\n      value: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"8\"), React.createElement(MenuItem, {\n      value: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"9\"), React.createElement(MenuItem, {\n      value: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"10\"))))), React.createElement(CardActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => handleSubmit(values.address, values.spotsNum),\n      size: \"small\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Find Parking!\"), React.createElement(Button, {\n      onClick: () => getCurrentLocation(),\n      size: \"small\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Get Current Position!\")));\n  }\n\n}\n\nexport default withStyles(styles)(ParkingForm);","map":{"version":3,"sources":["/Users/irvingrabel/Documents/Projects/Open_Spaces/front_end_open_spaces/src/components/ParkingForm.js"],"names":["React","withStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","TextField","Geocode","Select","MenuItem","setApiKey","styles","theme","card","maxWidth","media","height","textField","marginLeft","spacing","marginRight","ParkingForm","Component","state","address","spotsNum","handleChange","event","setValues","values","target","name","value","handleScriptLoad","autocomplete","google","maps","places","Autocomplete","document","getElementById","setFields","addListener","handlePlaceSelect","handleSubmit","console","log","addressObject","fromRentor","props","socket","emit","getCurrentLocation","navigator","geolocation","getCurrentPosition","position","render","classes","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Geocode from \"react-geocode\";\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nGeocode.setApiKey(\"AIzaSyDS7fqSLY5L2xuXAb8cIb1vyQRKt5EPXmw\");\n\nconst styles = theme => ({\n  card: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n});\n\nclass ParkingForm extends React.Component {\n\n  state = {\n    address: '',\n    spotsNum:''\n  }\n\n\n  handleChange =  event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleScriptLoad = ()=> {\n  // Initialize Google Autocomplete\n  /*global google*/\n  this.autocomplete = new google.maps.places.Autocomplete(\n                        document.getElementById(\"autocomplete\"));\n  // Avoid paying for data that you don't need by restricting the\n  // set of place fields that are returned to just the address\n  // components and formatted address\n  this.autocomplete.setFields(['address_components',\n                               'formatted_address']);\n  // Fire Event when a suggested name is selected\n  this.autocomplete.addListener(\"place_changed\",\n                                this.handlePlaceSelect);\n}\n\n   handleSubmit = (address, spotsNum)=>{\n    console.log(\"spotsNum\",spotsNum)\n    let addressObject = {address: address, spotsNum:spotsNum, fromRentor: true}\n    props.socket.emit('client:message', addressObject)\n\n  }\n\n   getCurrentLocation = ()=>{\n    navigator.geolocation.getCurrentPosition(position=> console.log(position))\n  }\n\n  render(){\n    const {classes} = this.props\n    return (\n      <Card className = {classes.card}>\n        <Script url=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDS7fqSLY5L2xuXAb8cIb1vyQRKt5EPXmw&libraries=places\"\n          onLoad={this.handleScriptLoad}\n        />\n        <CardActionArea >\n          <CardMedia className = {classes.media} image = \"../assets/parking_form_pic.jpeg\" title = \"Contemplative Reptile\" />\n          <CardContent >\n          <form>\n          <TextField name=\"address\" id = \"outlined-name\"label = \"Address\"className = {classes.textField}\n          value = {values.address} onChange = {this.handleChange} margin = \"normal\"variant = \"outlined\" />\n          <Select\n            value={values.spotsNum}\n            onChange={this.handleChange}\n            inputProps={{\n              name: 'spotsNum',\n              id: 'age-simple',\n              }}\n          >\n            <MenuItem value=\"NONE\">\n            <em>None</em>\n            </MenuItem>\n            <MenuItem value={1}>1</MenuItem>\n            <MenuItem value={2}>2</MenuItem>\n            <MenuItem value={3}>3</MenuItem>\n            <MenuItem value={4}>4</MenuItem>\n            <MenuItem value={5}>5</MenuItem>\n            <MenuItem value={6}>6</MenuItem>\n            <MenuItem value={7}>7</MenuItem>\n            <MenuItem value={8}>8</MenuItem>\n            <MenuItem value={9}>9</MenuItem>\n            <MenuItem value={10}>10</MenuItem>\n            </Select>\n          </form>\n          </CardContent>\n          </CardActionArea>\n          <CardActions >\n          <Button onClick={()=>handleSubmit(values.address, values.spotsNum)}size = \"small\" color = \"primary\" >Find Parking!</Button>\n          <Button onClick={()=>getCurrentLocation()}size = \"small\" color = \"primary\" >Get Current Position!</Button>\n          </CardActions>\n      </Card>\n    );\n  }\n}\n\nexport default withStyles(styles)(ParkingForm)\n"]},"metadata":{},"sourceType":"module"}